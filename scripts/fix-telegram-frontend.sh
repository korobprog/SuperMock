#!/usr/bin/env bash

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ frontend
set -Eeuo pipefail

SSH_KEY="${SSH_KEY:-~/.ssh/timeweb_vps_key}"
SERVER="${SERVER:-217.198.6.238}"
USER_="${USER_:-root}"
DEST="${DEST:-/opt/mockmate}"

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

success() { printf "${GREEN}‚úÖ %s${NC}\n" "$*"; }
warning() { printf "${YELLOW}‚ö†Ô∏è  %s${NC}\n" "$*"; }
error() { printf "${RED}‚ùå %s${NC}\n" "$*"; }

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ frontend..."

# 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo "1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
ssh -i "${SSH_KEY}" "${USER_}@${SERVER}" "cd '${DEST}' && echo 'Frontend env vars:' && grep -E '^VITE_TELEGRAM' .env || echo 'VITE vars not found'"

# 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo "2. –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
ssh -i "${SSH_KEY}" "${USER_}@${SERVER}" "cd '${DEST}' && docker compose -f docker-compose.prod.yml config | grep -A5 -B5 VITE_TELEGRAM || echo 'Docker env not found'"

# 3. –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º frontend —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
echo "3. –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º frontend..."
ssh -i "${SSH_KEY}" "${USER_}@${SERVER}" "cd '${DEST}' && 
    echo 'Building frontend with env vars...' &&
    docker compose -f docker-compose.prod.yml build --no-cache frontend &&
    docker compose -f docker-compose.prod.yml up -d frontend"

# 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ frontend
echo "4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ frontend..."
ssh -i "${SSH_KEY}" "${USER_}@${SERVER}" "cd '${DEST}' && docker logs supermock-frontend --tail=20"

# 5. –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä—è–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo "5. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É..."
ssh -i "${SSH_KEY}" "${USER_}@${SERVER}" "cat > /tmp/telegram-debug.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <title>Telegram Auth Debug</title>
    <style>body { font-family: Arial, sans-serif; margin: 50px; }</style>
</head>
<body>
    <h1>üîç Telegram Auth Debug</h1>
    <div id=\"debug\"></div>
    
    <h2>1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é:</h2>
    <div id=\"telegram-login\"></div>
    
    <h2>2. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–µ–Ω–µ:</h2>
    <p><strong>Current domain:</strong> <span id=\"domain\"></span></p>
    <p><strong>Protocol:</strong> <span id=\"protocol\"></span></p>
    
    <script>
        document.getElementById('domain').textContent = window.location.hostname;
        document.getElementById('protocol').textContent = window.location.protocol;
        
        window.onTelegramAuth = function(user) {
            document.getElementById('debug').innerHTML = 
                '<div style=\"color: green\">‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!</div>' +
                '<pre>' + JSON.stringify(user, null, 2) + '</pre>';
        };
        
        // –°–æ–∑–¥–∞–µ–º Telegram widget
        const script = document.createElement('script');
        script.async = true;
        script.src = 'https://telegram.org/js/telegram-widget.js?22';
        script.setAttribute('data-telegram-login', 'SuperMock_bot');
        script.setAttribute('data-size', 'large');
        script.setAttribute('data-auth-url', window.location.origin);
        script.setAttribute('data-request-access', 'write');
        script.setAttribute('data-lang', 'ru');
        script.setAttribute('data-onauth', 'onTelegramAuth');
        
        document.getElementById('telegram-login').appendChild(script);
        
        console.log('Debug page loaded, domain:', window.location.hostname);
    </script>
</body>
</html>
EOF"

# 6. –ö–æ–ø–∏—Ä—É–µ–º –≤ –ø—É–±–ª–∏—á–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
ssh -i "${SSH_KEY}" "${USER_}@${SERVER}" "cd '${DEST}' && 
    cp /tmp/telegram-debug.html public/ || 
    docker exec supermock-frontend sh -c 'cp /tmp/telegram-debug.html /usr/share/nginx/html/' || 
    echo 'Could not copy debug file'"

success "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!"
echo ""
warning "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–º–µ–Ω supermock.ru –≤ @BotFather (Bot Settings ‚Üí Domain)"
echo "2. –û—Ç–∫—Ä–æ–π—Ç–µ https://supermock.ru/telegram-debug.html –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏"
echo ""
echo "üîç –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è:"
echo "‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –¥–æ–º–µ–Ω –¢–û–ß–ù–û –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ BotFather"
echo "‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HTTPS"
echo "‚Ä¢ –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞"
