#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
# –ó–∞–ø—É—Å–∫: bash scripts/deploy/deploy-timezone-sync.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER_IP="217.198.6.238"
SSH_KEY="~/.ssh/id_rsa"
PROJECT_DIR="/opt/mockmate"
BACKUP_DIR="/root/backups"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
run_on_server() {
    local cmd="$1"
    log_info "–í—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: $cmd"
    ssh -i $SSH_KEY root@$SERVER_IP "$cmd"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞
create_backup() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
    
    local timestamp=$(date +%Y%m%d_%H%M%S)
    local backup_name="timezone_sync_backup_$timestamp"
    
    run_on_server "mkdir -p $BACKUP_DIR"
    run_on_server "cd $PROJECT_DIR && tar -czf $BACKUP_DIR/$backup_name.tar.gz --exclude=node_modules --exclude=.git ."
    
    log_success "–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $BACKUP_DIR/$backup_name.tar.gz"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
check_server_status() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    if ! ping -c 1 $SERVER_IP > /dev/null 2>&1; then
        log_error "–°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $SERVER_IP"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    local containers_status=$(run_on_server "cd $PROJECT_DIR && docker-compose -f docker-compose.prod.yml ps --format 'table {{.Name}}\t{{.Status}}\t{{.Ports}}'")
    log_info "–°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    echo "$containers_status"
    
    log_success "–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
deploy_frontend() {
    log_info "–î–µ–ø–ª–æ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏..."
    
    # –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –ª–æ–∫–∞–ª—å–Ω–æ
    log_info "–°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    cd frontend
    npm run build
    cd ..
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    tar -czf frontend-timezone-sync.tar.gz -C frontend/dist .
    
    # –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    log_info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    scp -i $SSH_KEY frontend-timezone-sync.tar.gz root@$SERVER_IP:$PROJECT_DIR/
    
    # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    run_on_server "cd $PROJECT_DIR && tar -xzf frontend-timezone-sync.tar.gz -C frontend/dist/ --strip-components=0"
    run_on_server "cd $PROJECT_DIR && rm frontend-timezone-sync.tar.gz"
    
    # –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤
    rm frontend-timezone-sync.tar.gz
    
    log_success "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è –±—ç–∫–µ–Ω–¥–∞
deploy_backend() {
    log_info "–î–µ–ø–ª–æ–π –±—ç–∫–µ–Ω–¥–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –±—ç–∫–µ–Ω–¥–∞
    log_info "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –±—ç–∫–µ–Ω–¥–∞..."
    scp -i $SSH_KEY backend/server/index.js root@$SERVER_IP:$PROJECT_DIR/backend/server/
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    log_info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    run_on_server "cd $PROJECT_DIR && docker-compose -f docker-compose.prod.yml restart backend"
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    log_info "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
    local backend_status=$(run_on_server "cd $PROJECT_DIR && docker-compose ps backend")
    if echo "$backend_status" | grep -q "Up"; then
        log_success "–ë—ç–∫–µ–Ω–¥ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
    else
        log_error "–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞"
        exit 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
test_timezone_sync() {
    log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    local api_status=$(curl -s "https://supermock.ru/api/dev/status" || echo "ERROR")
    if [ "$api_status" != "ERROR" ]; then
        log_success "API –¥–æ—Å—Ç—É–ø–µ–Ω"
    else
        log_warning "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ..."
        local local_api_status=$(curl -s "http://$SERVER_IP:3000/api/dev/status" || echo "ERROR")
        if [ "$local_api_status" != "ERROR" ]; then
            log_success "API –¥–æ—Å—Ç—É–ø–µ–Ω –ª–æ–∫–∞–ª—å–Ω–æ"
        else
            log_error "API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            return 1
        fi
    fi
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º enhanced API
    log_info "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ enhanced API..."
    local enhanced_api_status=$(curl -s "https://supermock.ru/api/slots/enhanced?role=candidate&timezone=Europe/Moscow" || echo "ERROR")
    if [ "$enhanced_api_status" != "ERROR" ]; then
        log_success "Enhanced API —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        log_warning "Enhanced API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ..."
        local local_enhanced_status=$(curl -s "http://$SERVER_IP:3000/api/slots/enhanced?role=candidate&timezone=Europe/Moscow" || echo "ERROR")
        if [ "$local_enhanced_status" != "ERROR" ]; then
            log_success "Enhanced API —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ"
        else
            log_error "Enhanced API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            return 1
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
create_production_test_data() {
    log_info "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    scp -i $SSH_KEY create-timezone-test-users.js root@$SERVER_IP:$PROJECT_DIR/
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    run_on_server "cd $PROJECT_DIR && node create-timezone-test-users.js"
    
    log_success "–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–æ–≤
check_logs() {
    log_info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤..."
    
    # –õ–æ–≥–∏ –±—ç–∫–µ–Ω–¥–∞
    log_info "–õ–æ–≥–∏ –±—ç–∫–µ–Ω–¥–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
    run_on_server "cd $PROJECT_DIR && docker-compose logs --tail=20 backend"
    
    # –õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    log_info "–õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫):"
    run_on_server "cd $PROJECT_DIR && docker-compose logs --tail=20 frontend"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üåç –î–µ–ø–ª–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω"
    echo "=================================================="
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞
    check_server_status
    
    # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    create_backup
    
    # –î–µ–ø–ª–æ–∏–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    deploy_frontend
    
    # –î–µ–ø–ª–æ–∏–º –±—ç–∫–µ–Ω–¥
    deploy_backend
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
    check_logs
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
    test_timezone_sync
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    create_production_test_data
    
    echo ""
    echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    echo ""
    echo "üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
    echo "‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø —Å–∏—Å—Ç–µ–º—ã"
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å —Å–∏—Å—Ç–µ–º–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏"
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –±—ç–∫–µ–Ω–¥ —Å enhanced API"
    echo "‚úÖ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å"
    echo "‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
    echo "‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: https://supermock.ru"
    echo "‚Ä¢ API —Å—Ç–∞—Ç—É—Å: https://supermock.ru/api/dev/status"
    echo "‚Ä¢ Enhanced API: https://supermock.ru/api/slots/enhanced"
    echo ""
    echo "üí° –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "‚Ä¢ bash scripts/deploy/health-check.sh"
    echo "‚Ä¢ bash scripts/deploy/deploy-interactive.sh"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'log_error "–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä–æ–∫–µ $LINENO. –í—ã—Ö–æ–¥."; exit 1' ERR

# –ó–∞–ø—É—Å–∫
main "$@"
