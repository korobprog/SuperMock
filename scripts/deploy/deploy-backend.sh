#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –±—ç–∫–µ–Ω–¥–∞
# –ù–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç Traefik –∏ –¥—Ä—É–≥–∏–µ —Å–µ—Ä–≤–∏—Å—ã

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—ç–∫–µ–Ω–¥–∞ Super Mock..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh dokploy-server "echo '–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω'" > /dev/null 2>&1; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ –±—ç–∫–µ–Ω–¥–∞
echo "üì¶ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ –±—ç–∫–µ–Ω–¥–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -d "backend" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è 'backend' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $(pwd)"
    echo "üìÅ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
    ls -la
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend –Ω–µ –ø—É—Å—Ç–∞—è
if [ ! "$(ls -A backend)" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è 'backend' –ø—É—Å—Ç–∞"
    exit 1
fi

echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $(pwd)/backend"
tar -czf backend.tar.gz --exclude='node_modules' --exclude='.git' --exclude='dist' --exclude='.env' --exclude='*.log' --exclude='uploads' backend/

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–ª—Å—è
if [ ! -f "backend.tar.gz" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤ backend.tar.gz"
    exit 1
fi

echo "üì¶ –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: $(du -h backend.tar.gz | cut -f1)"
scp backend.tar.gz dokploy-server:/opt/mockmate/
ssh dokploy-server "cd /opt/mockmate && tar -xzf backend.tar.gz && rm backend.tar.gz"
rm backend.tar.gz

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker
echo "üì¶ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
if [ ! -f "docker-compose.prod.yml" ]; then
    echo "‚ùå –§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

if [ ! -f "backend/Dockerfile" ]; then
    echo "‚ùå –§–∞–π–ª backend/Dockerfile –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker"
tar -czf docker-config.tar.gz docker-compose.prod.yml backend/Dockerfile

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–ª—Å—è
if [ ! -f "docker-config.tar.gz" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤ docker-config.tar.gz"
    exit 1
fi

echo "üì¶ –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: $(du -h docker-config.tar.gz | cut -f1)"
scp docker-config.tar.gz dokploy-server:/opt/mockmate/
ssh dokploy-server "cd /opt/mockmate && tar -xzf docker-config.tar.gz && rm docker-config.tar.gz"
rm docker-config.tar.gz

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
ssh dokploy-server << 'EOF'

echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—ç–∫–µ–Ω–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

cd /opt/mockmate

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Ç–µ–∫—É—â–µ–≥–æ –±—ç–∫–µ–Ω–¥–∞
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
BACKUP_NAME="backend-backup-$(date +%Y%m%d_%H%M%S).tar.gz"
tar -czf "$BACKUP_NAME" backend/ 2>/dev/null || true

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–ª—å–∫–æ –±—ç–∫–µ–Ω–¥–∞
echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
docker-compose -f docker-compose.prod.yml stop backend

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑–∞ –±—ç–∫–µ–Ω–¥–∞
echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑–∞..."
docker rmi supermock-backend 2>/dev/null || true

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ç–æ–ª—å–∫–æ –±—ç–∫–µ–Ω–¥–∞
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
docker-compose -f docker-compose.prod.yml build --no-cache backend

# –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞
echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞..."
docker-compose -f docker-compose.prod.yml up -d backend

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
if docker ps | grep -q mockmate-backend; then
    echo "‚úÖ –ë—ç–∫–µ–Ω–¥ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –∏ –∑–∞–ø—É—â–µ–Ω!"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è..."
sleep 10
if curl -f -s http://localhost:3000/api/health > /dev/null 2>&1; then
    echo "‚úÖ –ë—ç–∫–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
else
    echo "‚ö†Ô∏è  –ë—ç–∫–µ–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–π..."
docker exec supermock-backend npx prisma migrate status || true

echo "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker exec supermock-backend npx prisma db push --accept-data-loss || true

echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma Client..."
docker exec supermock-backend npx prisma generate --schema backend/prisma/schema.prisma || true

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
docker restart supermock-backend
sleep 15

# –ü—Ä–æ–≤–µ—Ä–∫–∞ WebSocket
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ WebSocket..."
if curl -f -s "https://api.supermock.ru/socket.io/?EIO=4&transport=polling" > /dev/null 2>&1; then
    echo "‚úÖ WebSocket endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ö†Ô∏è  WebSocket endpoint –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
sleep 5
if curl -f -s https://api.supermock.ru/api/health > /dev/null 2>&1; then
    echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTPS"
else
    echo "‚ö†Ô∏è  API –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±—ç–∫–µ–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üîó API: https://api.supermock.ru"

EOF

echo "‚úÖ –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±—ç–∫–µ–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω!"
