#!/bin/bash

# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ Super Mock..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh dokploy-server "echo '–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω'" > /dev/null 2>&1; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞..."
cd "$(dirname "$0")/../.."
echo "üìç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -d "frontend" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è 'frontend' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: $(pwd)"
    exit 1
fi

# üîß –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø
echo "üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π..."

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å ESLint
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å ESLint..."
if [ -f "frontend/src/components/ui/command.tsx" ]; then
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    sed -i 's/interface CommandDialogProps extends DialogProps {}/interface CommandDialogProps extends DialogProps {\n  \/\/ Extends DialogProps interface\n}/' frontend/src/components/ui/command.tsx
fi

if [ -f "frontend/src/components/ui/textarea.tsx" ]; then
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    sed -i 's/export interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}/export interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  \/\/ Extends React textarea attributes\n}/' frontend/src/components/ui/textarea.tsx
fi

# üîç –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò
echo "üîç –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
REQUIRED_FILES=(
    "package.json"
    "frontend/vite.config.ts"
    "frontend/tsconfig.app.json"
    "frontend/Dockerfile"
    "docker-compose.prod.yml"
    ".env"
)

for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª: $file"
        exit 1
    fi
done
echo "‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ TypeScript (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—à–∏–±–∫–∏)
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ TypeScript..."
if command -v npx &> /dev/null; then
    cd frontend
    if npx tsc --noEmit --skipLibCheck 2>&1 | head -20; then
        echo "‚úÖ TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞"
    else
        echo "‚ö†Ô∏è  TypeScript –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã—è–≤–∏–ª–∞ –æ—à–∏–±–∫–∏, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º..."
    fi
    cd ..
else
    echo "‚ö†Ô∏è  npx –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º TypeScript –ø—Ä–æ–≤–µ—Ä–∫—É"
fi

# –ü—Ä–æ–ø—É—Å–∫–∞–µ–º ESLint –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –¥–µ–ø–ª–æ—è
echo "üîç ESLint –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –¥–µ–ø–ª–æ—è..."

# –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å pnpm
echo "üèóÔ∏è  –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
cd frontend
if command -v pnpm &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å–±–æ—Ä–∫–∏ (pnpm)..."
    pnpm install --silent
    
    echo "üî® –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞..."
    if pnpm run build 2>&1 | head -30; then
        echo "‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–±–æ—Ä–∫—É
        rm -rf dist
    else
        echo "‚ùå –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
        cd ..
        exit 1
    fi
elif command -v npm &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π —Å–±–æ—Ä–∫–∏ (npm)..."
    npm install --legacy-peer-deps --silent
    
    echo "üî® –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞..."
    if npm run build 2>&1 | head -30; then
        echo "‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–∞"
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–±–æ—Ä–∫—É
        rm -rf dist
    else
        echo "‚ùå –¢–µ—Å—Ç–æ–≤–∞—è —Å–±–æ—Ä–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
        cd ..
        exit 1
    fi
else
    echo "‚ö†Ô∏è  pnpm –∏ npm –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–±–æ—Ä–∫—É"
fi
cd ..

echo "üéØ –í—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!"

# –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
tar -czf frontend.tar.gz --exclude='node_modules' --exclude='.git' --exclude='dist' --exclude='.env' --exclude='*.log' frontend/

if [ ! -f "frontend.tar.gz" ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—Ä—Ö–∏–≤ frontend.tar.gz"
    exit 1
fi

echo "üì¶ –†–∞–∑–º–µ—Ä –∞—Ä—Ö–∏–≤–∞: $(du -h frontend.tar.gz | cut -f1)"

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo "üì§ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp frontend.tar.gz dokploy-server:/opt/mockmate/
ssh dokploy-server "cd /opt/mockmate && echo 'üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤...' && rm -rf frontend/dist && echo 'üì¶ –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞...' && tar -xzf frontend.tar.gz && rm frontend.tar.gz"
rm frontend.tar.gz

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker
echo "üì¶ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker..."
tar -czf docker-config.tar.gz docker-compose.prod.yml docker-compose.override.yml frontend/Dockerfile .env
scp docker-config.tar.gz dokploy-server:/opt/mockmate/
ssh dokploy-server "cd /opt/mockmate && tar -xzf docker-config.tar.gz && rm docker-config.tar.gz"
rm docker-config.tar.gz

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
ssh dokploy-server << 'EOF'

echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

cd /opt/mockmate

# üîß –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ù–ê –°–ï–†–í–ï–†–ï
echo "üîß –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if grep -q "postgres_secondary" .env; then
    sed -i 's/DATABASE_URL_SECONDARY=.*/DATABASE_URL_SECONDARY=postgresql:\/\/supermock:krishna1284@postgres:5432\/supermock/' .env
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Traefik
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ Traefik..."
if docker logs traefik --tail=20 2>/dev/null | grep -q "traefik-traefik"; then
    echo "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å Traefik, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º..."
    # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç Traefik
    if [ -f "/opt/mockmate/traefik/docker-compose.yml" ]; then
        sed -i 's/traefik.enable=true/traefik.enable=false/' /opt/mockmate/traefik/docker-compose.yml
        cd /opt/mockmate/traefik && docker-compose down && docker-compose up -d
        cd /opt/mockmate
    fi
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞..."
BACKUP_NAME="frontend-backup-$(date +%Y%m%d_%H%M%S).tar.gz"
tar -czf "$BACKUP_NAME" frontend/ 2>/dev/null || true

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
docker-compose -f docker-compose.prod.yml stop frontend 2>/dev/null || true

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑–∞
echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –æ–±—Ä–∞–∑–∞..."
docker rmi supermock-frontend 2>/dev/null || true

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
if [ -f ".env" ]; then
    export $(cat .env | grep -v '^#' | xargs)
fi

# –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
docker-compose -f docker-compose.prod.yml build --no-cache \
  --build-arg VITE_API_URL="${VITE_API_URL:-https://api.supermock.ru}" \
  --build-arg VITE_JITSI_URL="${VITE_JITSI_URL:-https://meet.jit.si}" \
  --build-arg VITE_TELEGRAM_BOT_NAME="${VITE_TELEGRAM_BOT_NAME:-SuperMock_bot}" \
  --build-arg VITE_TELEGRAM_BOT_ID="${VITE_TELEGRAM_BOT_ID:-8464088869}" \
  --build-arg VITE_STUN_URLS="${VITE_STUN_URLS:-stun:stun.l.google.com:19302}" \
  --build-arg VITE_TURN_URL="${VITE_TURN_URL:-turn:217.198.6.238:3478}" \
  --build-arg VITE_TURN_USERNAME="${VITE_TURN_USERNAME:-supermock}" \
  --build-arg VITE_TURN_PASSWORD="${VITE_TURN_PASSWORD:-supermock_turn_secret_2024_very_long_and_secure_key_for_webrtc}" \
  --build-arg VITE_ENABLE_DEMO_MODE="${VITE_ENABLE_DEMO_MODE:-0}" \
  frontend

# –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π..."
if docker-compose -f docker-compose.prod.yml up -d frontend; then
    echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    sleep 15
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    if docker ps | grep -q "supermock-frontend"; then
        echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
        echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏..."
        sleep 10
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP
        if curl -f -s http://localhost:8080 > /dev/null 2>&1; then
            echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ HTTP"
        else
            echo "‚ö†Ô∏è  –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ HTTP"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTPS
        if curl -f -s https://supermock.ru > /dev/null 2>&1; then
            echo "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTPS"
        elif curl -f -s http://supermock.ru > /dev/null 2>&1; then
            echo "‚ö†Ô∏è  –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –ø–æ HTTP"
        else
            echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            docker-compose -f docker-compose.prod.yml stop frontend
            docker-compose -f docker-compose-simple.yml up -d frontend
        fi
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
        docker-compose -f docker-compose-simple.yml up -d frontend
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback..."
    docker-compose -f docker-compose-simple.yml up -d frontend
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."
sleep 10

if curl -f -s https://supermock.ru > /dev/null 2>&1; then
    echo "üéâ –°–∞–π—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ HTTPS!"
elif curl -f -s http://supermock.ru > /dev/null 2>&1; then
    echo "üéâ –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ HTTP!"
elif curl -f -s http://217.198.6.238 > /dev/null 2>&1; then
    echo "üéâ –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ IP!"
else
    echo "‚ùå –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker ps | grep supermock
    exit 1
fi

echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üåê –°–∞–π—Ç: https://supermock.ru (–∏–ª–∏ http://supermock.ru)"

EOF

echo "‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω!"
