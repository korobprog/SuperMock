#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

set -e

echo "üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤..."

REQUIRED_FILES=(
    "docker-compose.prod.yml"
    "production.env"
    "frontend/Dockerfile"
    "backend/Dockerfile"
    "frontend/nginx.conf"
    "backend/prisma/schema.prisma"
    "package.json"
    "pnpm-lock.yaml"
)

for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        echo "‚ùå –§–∞–π–ª $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    else
        echo "‚úÖ $file"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ production environment
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ production environment..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –µ—Å—Ç—å –≤ production.env
REQUIRED_VARS=(
    "DATABASE_URL"
    "POSTGRES_DB"
    "POSTGRES_USER"
    "POSTGRES_PASSWORD"
    "TELEGRAM_BOT_TOKEN"
    "VITE_TELEGRAM_BOT_NAME"
    "VITE_TELEGRAM_BOT_ID"
    "FRONTEND_URL"
    "BACKEND_URL"
    "VITE_API_URL"
    "SESSION_SECRET"
    "JWT_SECRET"
)

for var in "${REQUIRED_VARS[@]}"; do
    if ! grep -q "^${var}=" production.env; then
        echo "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è $var –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ production.env"
        exit 1
    else
        echo "‚úÖ $var"
    fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile'–æ–≤
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Dockerfile'–æ–≤..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º frontend Dockerfile
if ! grep -q "VITE_API_URL" frontend/Dockerfile; then
    echo "‚ùå VITE_API_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ frontend/Dockerfile"
    exit 1
fi

if ! grep -q "VITE_TELEGRAM_BOT_NAME" frontend/Dockerfile; then
    echo "‚ùå VITE_TELEGRAM_BOT_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ frontend/Dockerfile"
    exit 1
fi

if ! grep -q "VITE_TELEGRAM_BOT_ID" frontend/Dockerfile; then
    echo "‚ùå VITE_TELEGRAM_BOT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ frontend/Dockerfile"
    exit 1
fi

echo "‚úÖ Frontend Dockerfile"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º backend Dockerfile
if ! grep -q "prisma generate" backend/Dockerfile; then
    echo "‚ùå prisma generate –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ backend/Dockerfile"
    exit 1
fi

echo "‚úÖ Backend Dockerfile"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Prisma schema
echo "üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ Prisma schema..."

if ! grep -q "model UserTool" backend/prisma/schema.prisma; then
    echo "‚ùå –ú–æ–¥–µ–ª—å UserTool –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Prisma schema"
    exit 1
fi

if ! grep -q "model User" backend/prisma/schema.prisma; then
    echo "‚ùå –ú–æ–¥–µ–ª—å User –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ Prisma schema"
    exit 1
fi

echo "‚úÖ Prisma schema"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json..."

if ! grep -q '"build"' package.json; then
    echo "‚ùå –°–∫—Ä–∏–ø—Ç build –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ package.json"
    exit 1
fi

echo "‚úÖ package.json"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.prod.yml
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ docker-compose.prod.yml..."

if ! grep -q "supermock-frontend" docker-compose.prod.yml; then
    echo "‚ùå –°–µ—Ä–≤–∏—Å supermock-frontend –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ docker-compose.prod.yml"
    exit 1
fi

if ! grep -q "supermock-backend" docker-compose.prod.yml; then
    echo "‚ùå –°–µ—Ä–≤–∏—Å supermock-backend –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ docker-compose.prod.yml"
    exit 1
fi

if ! grep -q "traefik" docker-compose.prod.yml; then
    echo "‚ùå Traefik labels –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ docker-compose.prod.yml"
    exit 1
fi

echo "‚úÖ docker-compose.prod.yml"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx.conf
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx.conf..."

if [ ! -f "frontend/nginx.conf" ]; then
    echo "‚ùå nginx.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

echo "‚úÖ nginx.conf"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .dockerignore
echo "üö´ –ü—Ä–æ–≤–µ—Ä–∫–∞ .dockerignore..."

if [ ! -f ".dockerignore" ]; then
    echo "‚ùå .dockerignore –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

echo "‚úÖ .dockerignore"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ DATABASE_URL –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–±–µ–ª–æ–≤ (–∏—Å–∫–ª—é—á–∞—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏)
if grep -v "^#" production.env | grep -q "Super Mock"; then
    echo "‚ùå DATABASE_URL —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–æ–±–µ–ª—ã –≤ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo "   –ò—Å–ø—Ä–∞–≤—å—Ç–µ –Ω–∞: supermock"
    exit 1
fi

echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL –Ω–∞—Å—Ç—Ä–æ–µ–∫
echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ SSL –Ω–∞—Å—Ç—Ä–æ–µ–∫..."

if ! grep -q "letsencrypt" docker-compose.prod.yml; then
    echo "‚ùå LetsEncrypt –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ docker-compose.prod.yml"
    exit 1
fi

echo "‚úÖ SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤
echo "üåç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–º–µ–Ω–æ–≤..."

if ! grep -q "supermock.ru" production.env; then
    echo "‚ùå –î–æ–º–µ–Ω supermock.ru –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

if ! grep -q "api.supermock.ru" production.env; then
    echo "‚ùå –î–æ–º–µ–Ω api.supermock.ru –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

echo "‚úÖ –î–æ–º–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Bot –Ω–∞—Å—Ç—Ä–æ–µ–∫
echo "ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram Bot –Ω–∞—Å—Ç—Ä–æ–µ–∫..."

if ! grep -q "TELEGRAM_BOT_TOKEN" production.env; then
    echo "‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

if ! grep -q "VITE_TELEGRAM_BOT_NAME" production.env; then
    echo "‚ùå VITE_TELEGRAM_BOT_NAME –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

if ! grep -q "VITE_TELEGRAM_BOT_ID" production.env; then
    echo "‚ùå VITE_TELEGRAM_BOT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

echo "‚úÖ Telegram Bot –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ TURN —Å–µ—Ä–≤–µ—Ä–∞
echo "üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ TURN —Å–µ—Ä–≤–µ—Ä–∞..."

if ! grep -q "VITE_TURN_URL" production.env; then
    echo "‚ùå VITE_TURN_URL –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

if ! grep -q "TURN_AUTH_SECRET" production.env; then
    echo "‚ùå TURN_AUTH_SECRET –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

echo "‚úÖ TURN —Å–µ—Ä–≤–µ—Ä"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
echo "üõ°Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."

if ! grep -q "SESSION_SECRET" production.env; then
    echo "‚ùå SESSION_SECRET –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

if ! grep -q "JWT_SECRET" production.env; then
    echo "‚ùå JWT_SECRET –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

echo "‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
echo "‚ö° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..."

if ! grep -q "WORKERS" production.env; then
    echo "‚ùå WORKERS –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

if ! grep -q "REQUEST_TIMEOUT" production.env; then
    echo "‚ùå REQUEST_TIMEOUT –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env"
    exit 1
fi

echo "‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å"

echo ""
echo "üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ SSH –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω: ssh dokploy-server"
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–µ–ø–ª–æ–π: ./scripts/deploy/deploy-all.sh"
echo ""
echo "üîó –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞: ssh dokploy-server 'docker ps'"
echo "- –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: ssh dokploy-server 'docker logs supermock-backend'"
echo "- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞: curl https://supermock.ru"
echo "- –ü—Ä–æ–≤–µ—Ä–∫–∞ API: curl https://api.supermock.ru/api/health"
