#!/bin/bash

# –ú–æ–¥–µ—Ä–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
# –û—Å–Ω–æ–≤–∞–Ω –Ω–∞ deploy-all.sh —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üåç –î–µ–ø–ª–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ Super Mock..."
echo "=================================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É
echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
if ! ssh dokploy-server "echo '–°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω'" > /dev/null 2>&1; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
SCRIPT_DIR=$(pwd)

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")/../.."
PROJECT_ROOT=$(pwd)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
if [ ! -d "frontend" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $PROJECT_ROOT"
    exit 1
fi

if [ ! -d "backend" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ $PROJECT_ROOT"
    exit 1
fi

echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: frontend, backend"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏..."
TIMEZONE_FILES=(
    "frontend/src/pages/TimeSelection.tsx"
    "frontend/src/components/ui/timezone-demo.tsx"
    "frontend/src/lib/api.ts"
    "backend/server/index.js"
)

for file in "${TIMEZONE_FILES[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
    fi
done

# –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞ —Å–∏—Å—Ç–µ–º—ã..."
BACKUP_NAME="timezone-sync-backup-$(date +%Y%m%d_%H%M%S).tar.gz"
tar -czf "$BACKUP_NAME" --exclude='node_modules' --exclude='.git' --exclude='dist' --exclude='*.log' ./
echo "‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω: $BACKUP_NAME"

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "üì¶ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏..."
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ frontend.tar.gz..."
if tar -czf frontend.tar.gz --exclude='node_modules' --exclude='.git' --exclude='dist' --exclude='.env' --exclude='*.log' frontend/; then
    echo "‚úÖ –ê—Ä—Ö–∏–≤ frontend.tar.gz —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞ frontend.tar.gz"
    exit 1
fi

echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ frontend –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp frontend.tar.gz dokploy-server:/opt/mockmate/
ssh dokploy-server "cd /opt/mockmate && tar -xzf frontend.tar.gz && rm frontend.tar.gz"
rm frontend.tar.gz

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ –±—ç–∫–µ–Ω–¥–∞
echo "üì¶ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–¥–∞ –±—ç–∫–µ–Ω–¥–∞ —Å enhanced API..."
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ backend.tar.gz..."
if tar -czf backend.tar.gz --exclude='node_modules' --exclude='.git' --exclude='dist' --exclude='.env' --exclude='*.log' --exclude='uploads' backend/; then
    echo "‚úÖ –ê—Ä—Ö–∏–≤ backend.tar.gz —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞ backend.tar.gz"
    exit 1
fi

echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ backend –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp backend.tar.gz dokploy-server:/opt/mockmate/
ssh dokploy-server "cd /opt/mockmate && tar -xzf backend.tar.gz && rm backend.tar.gz"
rm backend.tar.gz

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker
echo "üì¶ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker..."
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ docker-config.tar.gz..."
if tar -czf docker-config.tar.gz docker-compose.prod.yml frontend/Dockerfile backend/Dockerfile; then
    echo "‚úÖ –ê—Ä—Ö–∏–≤ docker-config.tar.gz —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞ docker-config.tar.gz"
    exit 1
fi

echo "üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp docker-config.tar.gz dokploy-server:/opt/mockmate/
ssh dokploy-server "cd /opt/mockmate && tar -xzf docker-config.tar.gz && rm docker-config.tar.gz"
rm docker-config.tar.gz

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
echo "üì¶ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è..."
TEST_SCRIPTS=(
    "create-timezone-test-users.js"
    "create-matching-test-users.js"
    "test-timezone-matching.js"
    "test-timezone-sync.js"
)

for script in "${TEST_SCRIPTS[@]}"; do
    if [ -f "$script" ]; then
        echo "üì§ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ $script..."
        scp "$script" dokploy-server:/opt/mockmate/
    else
        echo "‚ö†Ô∏è  $script –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
    fi
done

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å–∫—Ä–∏–ø—Ç–∞
cd "$SCRIPT_DIR"

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
ssh dokploy-server << 'EOF'

echo "üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."

cd /opt/mockmate

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞
echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –±—ç–∫–∞–ø–∞..."
BACKUP_NAME="timezone-sync-server-backup-$(date +%Y%m%d_%H%M%S).tar.gz"
tar -czf "$BACKUP_NAME" frontend/ backend/ 2>/dev/null || true

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π (–ù–ï Traefik)
echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."
docker-compose -f docker-compose.prod.yml down

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker rmi supermock-frontend supermock-backend 2>/dev/null || true

# –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å —Å–∏—Å—Ç–µ–º–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏..."
docker-compose -f docker-compose.prod.yml build --no-cache frontend backend

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π
echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."
docker-compose -f docker-compose.prod.yml up -d

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."
sleep 20

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
FRONTEND_OK=false
BACKEND_OK=false

if docker ps | grep -q supermock-frontend; then
    echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω"
    FRONTEND_OK=true
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
fi

if docker ps | grep -q supermock-backend; then
    echo "‚úÖ –ë—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω"
    BACKEND_OK=true
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞"
fi

if [ "$FRONTEND_OK" = false ] || [ "$BACKEND_OK" = false ]; then
    echo "‚ùå –ù–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
    exit 1
fi

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
echo "üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –º–∏–≥—Ä–∞—Ü–∏–π..."
docker exec supermock-backend npx prisma migrate status || true

echo "üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
docker exec supermock-backend npx prisma db push --accept-data-loss || true

echo "üîß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma Client..."
docker exec supermock-backend npx prisma generate --schema backend/prisma/schema.prisma || true

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π..."
docker restart supermock-backend
sleep 15

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
echo "üåç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ API
echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ API..."
if curl -f -s http://localhost:3000/api/dev/status > /dev/null 2>&1; then
    echo "‚úÖ –ë–∞–∑–æ–≤—ã–π API —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå –ë–∞–∑–æ–≤—ã–π API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ enhanced API
echo "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ enhanced API..."
if curl -f -s "http://localhost:3000/api/slots/enhanced?role=candidate&timezone=Europe/Moscow" > /dev/null 2>&1; then
    echo "‚úÖ Enhanced API —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå Enhanced API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
echo "üë• –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
if [ -f "create-timezone-test-users.js" ]; then
    echo "üìä –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–∞–∑–Ω—ã–º–∏ —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏..."
    node create-timezone-test-users.js || echo "‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
else
    echo "‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç create-timezone-test-users.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
sleep 10
if curl -f -s http://localhost:8080 > /dev/null 2>&1; then
    echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
else
    echo "‚ö†Ô∏è  –§—Ä–æ–Ω—Ç–µ–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞
sleep 10
if curl -f -s http://localhost:3000/api/health > /dev/null 2>&1; then
    echo "‚úÖ –ë—ç–∫–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
else
    echo "‚ö†Ô∏è  –ë—ç–∫–µ–Ω–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ WebSocket
echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ WebSocket..."
if curl -f -s "https://api.supermock.ru/socket.io/?EIO=4&transport=polling" > /dev/null 2>&1; then
    echo "‚úÖ WebSocket endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ö†Ô∏è  WebSocket endpoint –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö URL
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö URL..."
sleep 5

if curl -f -s https://supermock.ru > /dev/null 2>&1; then
    echo "‚úÖ –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTPS"
else
    echo "‚ö†Ô∏è  –°–∞–π—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

if curl -f -s https://api.supermock.ru/api/health > /dev/null 2>&1; then
    echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTPS"
else
    echo "‚ö†Ô∏è  API –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ enhanced API —á–µ—Ä–µ–∑ HTTPS
echo "üåç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ enhanced API —á–µ—Ä–µ–∑ HTTPS..."
if curl -f -s "https://api.supermock.ru/api/slots/enhanced?role=candidate&timezone=Europe/Moscow" > /dev/null 2>&1; then
    echo "‚úÖ Enhanced API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ HTTPS"
else
    echo "‚ö†Ô∏è  Enhanced API –º–æ–∂–µ—Ç –±—ã—Ç—å –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤"
fi

# –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤..."
docker image prune -f 2>/dev/null || true

echo "üéâ –î–µ–ø–ª–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "üåê –°–∞–π—Ç: https://supermock.ru"
echo "üîó API: https://api.supermock.ru"
echo "üåç Enhanced API: https://api.supermock.ru/api/slots/enhanced"

EOF

echo "‚úÖ –î–µ–ø–ª–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω!"
echo ""
echo "üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
echo "‚úÖ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø —Å–∏—Å—Ç–µ–º—ã"
echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Å —Å–∏—Å—Ç–µ–º–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏"
echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –±—ç–∫–µ–Ω–¥ —Å enhanced API"
echo "‚úÖ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å"
echo "‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
echo ""
echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
echo "‚Ä¢ –û—Å–Ω–æ–≤–Ω–æ–π —Å–∞–π—Ç: https://supermock.ru"
echo "‚Ä¢ API —Å—Ç–∞—Ç—É—Å: https://api.supermock.ru/api/dev/status"
echo "‚Ä¢ Enhanced API: https://api.supermock.ru/api/slots/enhanced"
echo ""
echo "üí° –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "‚Ä¢ bash scripts/deploy/health-check.sh"
echo "‚Ä¢ bash scripts/deploy/deploy-interactive.sh"
