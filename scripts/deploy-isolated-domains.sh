#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è —Å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏
# supermock.ru - –ª–µ–Ω–¥–∏–Ω–≥ (Nginx)
# app.supermock.ru –∏ api.supermock.ru - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ API (Traefik)

set -e

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SERVER=${SERVER:-"217.198.6.238"}
DEST=${DEST:-"/opt/mockmate"}
SSH_KEY=${SSH_KEY:-"$HOME/.ssh/timeweb_vps_key"}
DOMAIN=${DOMAIN:-"supermock.ru"}
APP_DOMAIN=${APP_DOMAIN:-"app.supermock.ru"}
API_DOMAIN=${API_DOMAIN:-"api.supermock.ru"}

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π —Å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏..."
echo "üìç –°–µ—Ä–≤–µ—Ä: $SERVER"
echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $DEST"
echo "üåê –û—Å–Ω–æ–≤–Ω–æ–π –¥–æ–º–µ–Ω (–ª–µ–Ω–¥–∏–Ω–≥): $DOMAIN"
echo "üì± –î–æ–º–µ–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $APP_DOMAIN"
echo "üîå –î–æ–º–µ–Ω API: $API_DOMAIN"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SSH –∫–ª—é—á–∞
if [ ! -f "$SSH_KEY" ]; then
    echo "‚ùå SSH –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω: $SSH_KEY"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–±–æ—Ä–∫–∏
BUILD_DIR=$(mktemp -d)
echo "üì¶ –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: $BUILD_DIR"

# –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞..."

# –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
cp docker-compose.subdomains.yml "$BUILD_DIR/"
cp production.env "$BUILD_DIR/"
cp package.json "$BUILD_DIR/"
cp pnpm-lock.yaml "$BUILD_DIR/"
cp pnpm-workspace.yaml "$BUILD_DIR/"

# Backend (–∏—Å–∫–ª—é—á–∞–µ–º node_modules)
cp -r backend "$BUILD_DIR/"
rm -rf "$BUILD_DIR/backend/node_modules"

# Frontend –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (–∏—Å–∫–ª—é—á–∞–µ–º node_modules)
cp -r frontend "$BUILD_DIR/"
rm -rf "$BUILD_DIR/frontend/node_modules"

# Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –ª–µ–Ω–¥–∏–Ω–≥–∞)
cp -r nginx "$BUILD_DIR/"

# –°–∫—Ä–∏–ø—Ç—ã
cp -r scripts "$BUILD_DIR/"

# –£–¥–∞–ª—è–µ–º node_modules –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
rm -rf "$BUILD_DIR/node_modules" 2>/dev/null || true

# –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
echo "üì¶ –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤ –¥–ª—è –¥–µ–ø–ª–æ—è..."
cd "$BUILD_DIR"
tar -czf supermock-isolated-domains.tar.gz \
    --exclude=node_modules \
    --exclude=.git \
    --exclude=dist \
    --exclude=*.tar.gz \
    --exclude=*.log \
    --exclude=.env \
    --exclude=production.env \
    docker-compose.subdomains.yml \
    frontend/ \
    backend/ \
    scripts/ \
    nginx/ \
    production.env

echo "üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
scp -i "$SSH_KEY" supermock-isolated-domains.tar.gz "root@$SERVER:$DEST/"

echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
ssh -i "$SSH_KEY" "root@$SERVER" << 'EOF'
set -e

echo "üîß –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π —Å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏..."
cd /opt/mockmate

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.prod-multi.yml down --timeout 30 --remove-orphans || true
docker-compose -f docker-compose.subdomains.yml down --timeout 30 --remove-orphans || true

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx (–µ—Å–ª–∏ –±—ã–ª –∑–∞–ø—É—â–µ–Ω)
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Nginx (–µ—Å–ª–∏ –±—ã–ª –∑–∞–ø—É—â–µ–Ω)..."
systemctl stop nginx || true

# –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç—ã
echo "üîì –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç—ã..."
sudo fuser -k 80/tcp || true
sudo fuser -k 443/tcp || true
sudo fuser -k 8080/tcp || true
sudo fuser -k 8443/tcp || true
sleep 2

# –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –∞—Ä—Ö–∏–≤
echo "üìÇ –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–¥..."
tar -xzf supermock-isolated-domains.tar.gz

# –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "‚öôÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
if [ -f production.env ]; then
    ln -sf production.env .env
    
    # –°–æ–∑–¥–∞–µ–º backend/.env —Ñ–∞–π–ª
    echo "üîß –°–æ–∑–¥–∞–µ–º backend/.env —Ñ–∞–π–ª..."
    mkdir -p backend
    echo "NODE_ENV=production" > backend/.env
    echo "PORT=3000" >> backend/.env
    echo "HOST=0.0.0.0" >> backend/.env
    echo "" >> backend/.env
    echo "# Database Configuration" >> backend/.env
    echo "DATABASE_URL=\"postgresql://supermock:krishna1284@postgres:5432/supermock\"" >> backend/.env
    echo "" >> backend/.env
    echo "USE_MONGODB=false" >> backend/.env
    echo "" >> backend/.env
    echo "# Redis Configuration" >> backend/.env
    echo "USE_REDIS=false" >> backend/.env
    echo "REDIS_HOST=redis" >> backend/.env
    echo "REDIS_PORT=6379" >> backend/.env
    echo "" >> backend/.env
    echo "# Frontend Configuration" >> backend/.env
    echo "FRONTEND_URL=https://app.supermock.ru" >> backend/.env
    echo "FRONTEND_PORT=8080" >> backend/.env
    echo "" >> backend/.env
    echo "# JWT Configuration" >> backend/.env
    echo "JWT_SECRET=052aa937e3faf8542efe8c091a7ff830" >> backend/.env
    echo "" >> backend/.env
    echo "# Telegram Configuration" >> backend/.env
    echo "TELEGRAM_BOT_TOKEN=8464088869:AAFcZb7HmYQJa6vaYjfTDCjfr187p9hhk2o" >> backend/.env
    echo "TELEGRAM_BOT_NAME=SuperMock_bot" >> backend/.env
    echo "" >> backend/.env
    echo "# Telegram Auth Configuration" >> backend/.env
    echo "MAX_VERIFICATION_ATTEMPTS=3" >> backend/.env
    echo "VERIFICATION_CODE_EXPIRY=5" >> backend/.env
    echo "JWT_EXPIRY_DAYS=30" >> backend/.env
    echo "VERIFICATION_CODE_LENGTH=6" >> backend/.env
    echo "CODE_CLEANUP_INTERVAL=5" >> backend/.env
    echo "MAX_CODES_PER_PHONE=3" >> backend/.env
    echo "" >> backend/.env
    echo "# Domain Configuration" >> backend/.env
    echo "DOMAIN=supermock.ru" >> backend/.env
    
    echo "‚úÖ Backend .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
else
    echo "‚ùå –§–∞–π–ª production.env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# Nginx –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω - –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Traefik
echo "‚ÑπÔ∏è Nginx –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ Traefik"

# –°–æ–∑–¥–∞–µ–º –æ–±—â—É—é —Å–µ—Ç—å traefik-network
echo "üîß –°–æ–∑–¥–∞–µ–º –æ–±—â—É—é —Å–µ—Ç—å traefik-network..."
if ! docker network ls | grep -q "traefik-network"; then
    docker network create traefik-network --driver bridge
    echo "‚úÖ –°–µ—Ç—å traefik-network —Å–æ–∑–¥–∞–Ω–∞"
else
    echo "‚úÖ –°–µ—Ç—å traefik-network —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Docker Hub
echo "üîê –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤ Docker Hub..."
echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤..."
docker-compose -f docker-compose.subdomains.yml up -d --build

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 30

# Nginx –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω - –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Traefik
echo "‚ÑπÔ∏è Nginx –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ Traefik"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker ps --filter "name=supermock" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# Nginx –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
echo "‚ÑπÔ∏è Nginx –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è - –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ Traefik"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤..."

# API (—á–µ—Ä–µ–∑ Traefik)
if curl -s -o /dev/null -w "%{http_code}" https://api.supermock.ru/api/health | grep -q "200"; then
    echo "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ https://api.supermock.ru"
else
    echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ https://api.supermock.ru"
    echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ Traefik..."
    docker logs supermock-traefik --tail 20
fi

# Frontend App (—á–µ—Ä–µ–∑ Traefik)
if curl -s -o /dev/null -w "%{http_code}" https://app.supermock.ru/ | grep -q "200"; then
    echo "‚úÖ Frontend App –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ https://app.supermock.ru"
else
    echo "‚ùå Frontend App –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ https://app.supermock.ru"
fi

# Landing (—á–µ—Ä–µ–∑ Traefik)
if curl -s -o /dev/null -w "%{http_code}" https://landing.supermock.ru/ | grep -q "200"; then
    echo "‚úÖ Landing –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ https://landing.supermock.ru"
else
    echo "‚ùå Landing –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ https://landing.supermock.ru"
    echo "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ Traefik..."
    docker logs supermock-traefik --tail 20
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
CONTAINER_STATUS=$(docker ps --filter "name=supermock" --format "{{.Status}}" 2>/dev/null || echo "ERROR")

if echo "$CONTAINER_STATUS" | grep -q "Up"; then
    echo "üéâ –î–µ–ø–ª–æ–π —Å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
    echo ""
    echo "üåê –°–µ—Ä–≤–∏—Å—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
    echo "- https://landing.supermock.ru (–õ–µ–Ω–¥–∏–Ω–≥ - Traefik)"
    echo "- https://app.supermock.ru (–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ - Traefik)"
    echo "- https://api.supermock.ru (API - Traefik)"
    echo ""
    echo "üîß –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:"
    echo "- –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ Traefik (–ø–æ—Ä—Ç—ã 80/443)"
    echo "- landing.supermock.ru, app.supermock.ru, api.supermock.ru ‚Üí Traefik"
    echo ""
    echo "üîê Telegram Auth API –¥–æ—Å—Ç—É–ø–µ–Ω:"
    echo "- POST /api/telegram-auth/send-code - –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞"
    echo "- POST /api/telegram-auth/verify-code - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞"
    echo "- GET /api/telegram-auth/me - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"
    echo "- GET /api/telegram-auth/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
    echo ""
    echo "üì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ @SuperMock_bot"
    echo "üîó –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: https://app.supermock.ru/auth/telegram"
else
    echo "‚ùå –û—à–∏–±–∫–∞: –Ω–µ –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker ps --filter "name=supermock" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "üîç –õ–æ–≥–∏ backend:"
    docker logs supermock-backend --tail 20 || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ backend"
    echo "üîç –õ–æ–≥–∏ Traefik:"
    docker logs supermock-traefik --tail 20 || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏ Traefik"
    exit 1
fi

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -f supermock-isolated-domains.tar.gz
rm -f supermock-full-deploy-*.tar.gz

echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
EOF

# –û—á–∏—Å—Ç–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "üßπ –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
rm -rf "$BUILD_DIR"

echo "üéâ –î–µ–ø–ª–æ–π —Å –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–æ–º–µ–Ω–∞–º–∏ –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo ""
echo "üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:"
echo "1. ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Docker Compose –¥–ª—è –ø–æ–¥–¥–æ–º–µ–Ω–æ–≤"
echo "2. ‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω Traefik –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –≤—Å–µ–º–∏ –ø–æ–¥–¥–æ–º–µ–Ω–∞–º–∏"
echo "3. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å–µ—Ä–≤–∏—Å landing –Ω–∞ –ø–æ–¥–¥–æ–º–µ–Ω landing.supermock.ru"
echo "4. ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –æ–±—â–∞—è —Å–µ—Ç—å traefik-network –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤"
echo "5. ‚úÖ –£—Å—Ç—Ä–∞–Ω–µ–Ω—ã –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø–æ—Ä—Ç–æ–≤ –º–µ–∂–¥—É —Å–µ—Ä–≤–∏—Å–∞–º–∏"
echo ""
echo "üåê –†–µ–∑—É–ª—å—Ç–∞—Ç:"
echo "- landing.supermock.ru, app.supermock.ru, api.supermock.ru ‚Üí Traefik (–ø–æ—Ä—Ç—ã 80/443)"
echo "- –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö"
echo "- –û–±—â–∞—è —Å–µ—Ç—å traefik-network –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤"
