# Docker Compose –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è test.supermock.ru
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç SuperMockTest_bot

services:
  # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL –¥–ª—è —Ç–µ—Å—Ç–æ–≤
  postgres-test:
    image: postgres:16-alpine
    container_name: supermock-test-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: supermock_test
      POSTGRES_USER: supermock_test
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_TEST}
    volumes:
      - ./data/test/postgres:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - supermock-test-network
    ports:
      - "5433:5432"  # –í–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç 5433 —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å —Å –æ—Å–Ω–æ–≤–Ω–æ–π –ë–î
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U supermock_test']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis –¥–ª—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Å–µ—Å—Å–∏–π (—Ç–µ—Å—Ç)
  redis-test:
    image: redis:7-alpine
    container_name: supermock-test-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - ./data/test/redis:/data
    networks:
      - supermock-test-network
    ports:
      - "6380:6379"  # –í–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç 6380 —á—Ç–æ–±—ã –Ω–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤–∞—Ç—å
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping || exit 1']
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API (—Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
  backend-test:
    image: supermock-test-backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: supermock-test-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      # üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
      DATABASE_URL: postgresql://supermock_test:${POSTGRES_PASSWORD_TEST}@postgres-test:5432/supermock_test?schema=public
      
      # ü§ñ –¢–ï–°–¢–û–í–´–ô –¢–ï–õ–ï–ì–†–ê–ú –ë–û–¢ SuperMockTest_bot
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN_TEST}
      TELEGRAM_BOT_ID: ${TELEGRAM_BOT_ID_TEST}
      TELEGRAM_BOT_NAME: ${TELEGRAM_BOT_NAME_TEST}
      TELEGRAM_BOT_USERNAME: ${TELEGRAM_BOT_USERNAME_TEST}
      
      # üåê –¢–µ—Å—Ç–æ–≤—ã–µ URL
      FRONTEND_URL: "https://test.supermock.ru"
      BACKEND_URL: "https://test.supermock.ru"
      CORS_ORIGIN: "https://test.supermock.ru"
      
      # üîÑ Redis
      REDIS_URL: redis://redis-test:6379
      
      # üîê –°–µ–∫—Ä–µ—Ç—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ)
      SESSION_SECRET: ${SESSION_SECRET_TEST}
      JWT_SECRET: ${JWT_SECRET_TEST}
      
      # üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
      LOG_LEVEL: debug
      
      # ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
      WORKERS: 1  # –î–ª—è —Ç–µ—Å—Ç–æ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ 1 –≤–æ—Ä–∫–µ—Ä–∞
      REQUEST_TIMEOUT: 30000
      SOCKET_TIMEOUT: 60000
      ENABLE_DEMO_MODE: 1
      
      # üé• WebRTC (—Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
      TURN_REALM: test.supermock.ru
      TURN_AUTH_SECRET: ${TURN_AUTH_SECRET_TEST}
      TURN_SERVER_HOST: test.supermock.ru
      
      # üîó Webhook URL –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –±–æ—Ç–∞
      TELEGRAM_WEBHOOK_URL: "https://test.supermock.ru/webhook/telegram"
    volumes:
      - ./backend/prisma:/app/prisma
      - ./logs/test/backend:/app/logs
    networks:
      - supermock-test-network
    ports:
      - "3001:3000"  # –í–Ω–µ—à–Ω–∏–π –ø–æ—Ä—Ç 3001 –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:3000/api/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend-test-api.rule=Host(`api.test.supermock.ru`)"
      - "traefik.http.routers.backend-test-api.entrypoints=web,websecure"
      - "traefik.http.routers.backend-test-api.tls=true"
      - "traefik.http.routers.backend-test-api.tls.certresolver=letsencrypt"
      - "traefik.http.routers.backend-test-api.priority=100"
      - "traefik.http.services.backend-test-api.loadbalancer.server.port=3000"

  # Frontend (—Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
  frontend-test:
    image: supermock-test-frontend
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        # üåê –¢–µ—Å—Ç–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        VITE_API_URL: "https://api.test.supermock.ru"
        VITE_JITSI_URL: "https://jitsi.supermock.ru"
        
        # ü§ñ –¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç
        VITE_TELEGRAM_BOT_NAME: ${TELEGRAM_BOT_NAME_TEST}
        VITE_TELEGRAM_BOT_ID: ${TELEGRAM_BOT_ID_TEST}
        
        # üé• WebRTC –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
        VITE_STUN_URLS: "stun:stun.l.google.com:19302,stun:stun1.l.google.com:19302"
        VITE_TURN_URL: "turn:test.supermock.ru:3478"
        VITE_TURN_USERNAME: "supermock_test"
        VITE_TURN_PASSWORD: ${TURN_PASSWORD_TEST}
        
        VITE_ENABLE_DEMO_MODE: "1"
    container_name: supermock-test-frontend
    restart: unless-stopped
    networks:
      - supermock-test-network
    depends_on:
      backend-test:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://127.0.0.1:8080/']
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-test-main.rule=Host(`test.supermock.ru`)"
      - "traefik.http.routers.frontend-test-main.entrypoints=web,websecure"
      - "traefik.http.routers.frontend-test-main.tls=true"
      - "traefik.http.routers.frontend-test-main.tls.certresolver=letsencrypt"
      - "traefik.http.routers.frontend-test-main.priority=50"
      - "traefik.http.services.frontend-test-main.loadbalancer.server.port=8080"

  # TURN Server –¥–ª—è WebRTC (—Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
  turn-test:
    image: coturn/coturn:latest
    container_name: supermock-test-turn
    restart: unless-stopped
    ports:
      - "3479:3478/udp"  # –î—Ä—É–≥–æ–π –ø–æ—Ä—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤
      - "3479:3478/tcp"
      - "5350:5349/tcp"
    command:
      - -n
      - --log-file=stdout
      - --fingerprint
      - --use-auth-secret
      - --realm=test.supermock.ru
      - --static-auth-secret=${TURN_AUTH_SECRET_TEST}
      - --no-multicast-peers
      - --no-cli
      - --min-port=49300  # –î—Ä—É–≥–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ç–æ–≤
      - --max-port=49350
      - --listening-ip=0.0.0.0
      - --external-ip=${EXTERNAL_IP}  # IP —Å–µ—Ä–≤–µ—Ä–∞
      - --no-tls
      - --no-dtls
    networks:
      - supermock-test-network

  # Traefik –¥–ª—è –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è –∏ SSL (—Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)
  traefik-test:
    image: traefik:v3.0
    container_name: supermock-test-traefik
    restart: unless-stopped
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@supermock.ru"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik/access.log"
      - "--accesslog.format=json"
    ports:
      - "80:80"    # HTTP
      - "443:443"  # HTTPS
      - "8080:8080" # Traefik Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/test/traefik:/letsencrypt
      - ./logs/test/traefik:/var/log/traefik
    networks:
      - supermock-test-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.test.supermock.ru`)"
      - "traefik.http.routers.traefik.entrypoints=web"
      - "traefik.http.routers.traefik.service=api@internal"

# –°–µ—Ç—å –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
networks:
  supermock-test-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.23.0.0/16
