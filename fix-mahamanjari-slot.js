import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function fixMahamanjariSlot() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–æ—Ç –¥–ª—è Mahamanjari_dd...\n');

    const userId = '74497925';
    const targetSlot = '2025-08-22T04:00:00.000Z'; // –°–ª–æ—Ç korobprog
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å –≤ —Å–ª–æ—Ç–µ 00:00 UTC
    console.log('üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∑–∞–ø–∏—Å—å –≤ —Å–ª–æ—Ç–µ 00:00 UTC...');
    await prisma.userQueue.deleteMany({
      where: {
        userId,
        slotUtc: '2025-08-22T00:00:00.000Z'
      }
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ª–æ—Ç
    console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ª–æ—Ç 04:00 UTC...');
    await prisma.userQueue.create({
      data: {
        userId,
        role: 'candidate',
        profession: 'frontend',
        language: 'ru',
        slotUtc: targetSlot,
        status: 'waiting'
      }
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
    console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è...');
    await prisma.preference.updateMany({
      where: {
        userId,
        role: 'candidate'
      },
      data: {
        slotsUtc: JSON.stringify([targetSlot])
      }
    });

    console.log('‚úÖ Mahamanjari_dd –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ —Å–ª–æ—Ç 04:00 UTC');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ—Ç 04:00 UTC:');
    const entries = await prisma.userQueue.findMany({
      where: { slotUtc: targetSlot },
      include: { user: true }
    });

    entries.forEach(entry => {
      const name = entry.user.firstName || entry.user.lastName || entry.user.username || 'Unknown';
      console.log(`   - ${name} (${entry.role}) - ${entry.profession} - ${entry.language}`);
    });

    const candidates = entries.filter(e => e.role === 'candidate');
    const interviewers = entries.filter(e => e.role === 'interviewer');

    console.log(`\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–ª–æ—Ç–∞ 04:00 UTC:`);
    console.log(`   –ö–∞–Ω–¥–∏–¥–∞—Ç—ã: ${candidates.length}`);
    console.log(`   –ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä—ã: ${interviewers.length}`);

    if (candidates.length > 0 && interviewers.length > 0) {
      console.log('\nüéØ –¢–µ–ø–µ—Ä—å –≤ —Å–ª–æ—Ç–µ –µ—Å—Ç—å –∏ –∫–∞–Ω–¥–∏–¥–∞—Ç, –∏ –∏–Ω—Ç–µ—Ä–≤—å—é–µ—Ä!');
      console.log('‚úÖ Mahamanjari_dd –¥–æ–ª–∂–µ–Ω –≤–∏–¥–µ—Ç—å korobprog –≤ UI');
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixMahamanjariSlot();
