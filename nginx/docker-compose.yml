version: '3.8'

services:
  nginx:
    image: nginx:1.25-alpine
    container_name: nginx-lb
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/letsencrypt:ro
      - nginx-cache:/var/cache/nginx
      - nginx-logs:/var/log/nginx
    depends_on:
      - backend1
      - backend2
      - backend3
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ['CMD', 'nginx', '-t']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  backend1:
    image: ${DOCKER_USERNAME:-makstreid}/supermock-backend:latest
    container_name: backend1
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/${MONGO_DB_NAME:-mock_interviews}?authSource=admin}
      - JWT_SECRET=${JWT_SECRET}
      - USE_MONGODB=${USE_MONGODB:-true}
      - USE_REDIS=${USE_REDIS:-true}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PORT=${PORT:-4000}
      - NODE_ENV=${NODE_ENV:-production}
      - HOST=${HOST:-0.0.0.0}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - INSTANCE_ID=backend1
    depends_on:
      - mongo
      - redis
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  backend2:
    image: ${DOCKER_USERNAME:-makstreid}/supermock-backend:latest
    container_name: backend2
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/${MONGO_DB_NAME:-mock_interviews}?authSource=admin}
      - JWT_SECRET=${JWT_SECRET}
      - USE_MONGODB=${USE_MONGODB:-true}
      - USE_REDIS=${USE_REDIS:-true}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PORT=${PORT:-4000}
      - NODE_ENV=${NODE_ENV:-production}
      - HOST=${HOST:-0.0.0.0}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - INSTANCE_ID=backend2
    depends_on:
      - mongo
      - redis
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  backend3:
    image: ${DOCKER_USERNAME:-makstreid}/supermock-backend:latest
    container_name: backend3
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/${MONGO_DB_NAME:-mock_interviews}?authSource=admin}
      - JWT_SECRET=${JWT_SECRET}
      - USE_MONGODB=${USE_MONGODB:-true}
      - USE_REDIS=${USE_REDIS:-true}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PORT=${PORT:-4000}
      - NODE_ENV=${NODE_ENV:-production}
      - HOST=${HOST:-0.0.0.0}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - FRONTEND_URL=${FRONTEND_URL}
      - INSTANCE_ID=backend3
    depends_on:
      - mongo
      - redis
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  mongo:
    image: mongo:5
    container_name: mongo
    ports:
      - '127.0.0.1:${MONGO_PORT:-27017}:27017'
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network
    restart: always
    command: --wiredTigerCacheSizeGB 1 --oplogSize 1024
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - '127.0.0.1:${REDIS_PORT:-6379}:6379'
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 800mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongo-data:
  redis-data:
  nginx-cache:
  nginx-logs:

networks:
  app-network:
    driver: bridge
