server {
    listen 8080;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;

    # В multi-domain архитектуре API проксируется через основной nginx
    # Здесь только статические файлы

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
        try_files $uri =404;
    }

    # SPA routing - все остальные запросы на index.html
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache";
    }

    # Security headers - исправленные для Telegram Login Widget
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    # CSP для Telegram Login Widget
    add_header Content-Security-Policy "
        default-src 'self' http: https: data: blob: 'unsafe-inline';
        script-src 'self' 'unsafe-inline' 'unsafe-eval' https://telegram.org https://core.telegram.org;
        frame-src 'self' https://telegram.org https://core.telegram.org;
        connect-src 'self' https://telegram.org https://core.telegram.org;
        img-src 'self' data: blob: https: http:;
        style-src 'self' 'unsafe-inline' https:;
        font-src 'self' data: https:;
    " always;
}
