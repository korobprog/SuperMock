services:
  frontend:
    networks:
      - traefik-network
    labels:
      # HTTPS роутер
      - 'traefik.enable=true'
      - 'traefik.http.routers.supermock-frontend.rule=Host(`supermock.ru`)'
      - 'traefik.http.routers.supermock-frontend.entrypoints=websecure'
      - 'traefik.http.routers.supermock-frontend.tls.certresolver=letsencrypt'
      - 'traefik.http.services.supermock-frontend.loadbalancer.server.port=8080'

      # HTTP роутер с редиректом
      - 'traefik.http.routers.supermock-frontend-http.rule=Host(`supermock.ru`)'
      - 'traefik.http.routers.supermock-frontend-http.entrypoints=web'
      - 'traefik.http.routers.supermock-frontend-http.middlewares=redirect-to-https'

      # Middleware для редиректа
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true'

  backend:
    networks:
      - traefik-network
    labels:
      # HTTPS роутер
      - 'traefik.enable=true'
      - 'traefik.http.routers.supermock-backend.rule=Host(`api.supermock.ru`) && (PathPrefix(`/api`) || PathPrefix(`/socket.io`))'
      - 'traefik.http.routers.supermock-backend.entrypoints=websecure'
      - 'traefik.http.routers.supermock-backend.tls.certresolver=letsencrypt'
      - 'traefik.http.services.supermock-backend.loadbalancer.server.port=3000'

      # HTTP роутер с редиректом
      - 'traefik.http.routers.supermock-backend-http.rule=Host(`api.supermock.ru`) && (PathPrefix(`/api`) || PathPrefix(`/socket.io`))'
      - 'traefik.http.routers.supermock-backend-http.entrypoints=web'
      - 'traefik.http.routers.supermock-backend-http.middlewares=redirect-to-https'

      # Middleware для редиректа (определяем для backend)
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true'

networks:
  traefik-network:
    external: true
