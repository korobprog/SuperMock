# Makefile –¥–ª—è –¥–µ–ø–ª–æ—è
.PHONY: sync quick-sync deploy rsync help logs status restart backup clean-logs test install build dev

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
include deploy.env

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-15s\033[0m %s\n", $$1, $$2}'

sync: ## –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π MD5
	./sync-to-server.sh

quick-sync: ## –ë—ã—Å—Ç—Ä–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
	./quick-sync.sh

deploy: ## Git-based –¥–µ–ø–ª–æ–π
	./deploy.sh

rsync: ## Rsync —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
	./rsync-deploy.sh

status: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
	ssh -i $(SSH_KEY) $(SERVER) "cd $(REMOTE_PATH) && docker-compose -f docker-compose.prod.yml ps"

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
	ssh -i $(SSH_KEY) $(SERVER) "cd $(REMOTE_PATH) && docker-compose -f docker-compose.prod.yml logs --tail=50"

logs-frontend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
	ssh -i $(SSH_KEY) $(SERVER) "docker logs supermock-frontend --tail=50"

logs-backend: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –±—ç–∫–µ–Ω–¥–∞
	ssh -i $(SSH_KEY) $(SERVER) "docker logs supermock-backend --tail=50"

logs-traefik: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Traefik
	ssh -i $(SSH_KEY) $(SERVER) "docker logs traefik --tail=50"

restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
	ssh -i $(SSH_KEY) $(SERVER) "cd $(REMOTE_PATH) && docker-compose -f docker-compose.prod.yml restart"
	ssh -i $(SSH_KEY) $(SERVER) "cd $(REMOTE_PATH)/traefik && docker-compose restart"

backup: ## –°–æ–∑–¥–∞—Ç—å –±—ç–∫–∞–ø –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
	ssh -i $(SSH_KEY) $(SERVER) "cd $(REMOTE_PATH) && tar -czf backup-$(shell date +%Y%m%d_%H%M%S).tar.gz docker-compose.prod.yml traefik/ backend/ frontend/"

clean-logs: ## –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –ª–æ–≥ —Ñ–∞–π–ª—ã
	rm -f deploy.log rsync-deploy.log

test: ## –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã
	@echo "üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∞–π—Ç..."
	@if curl -s -o /dev/null -w "%{http_code}" https://supermock.ru | grep -q "200"; then \
		echo "‚úÖ –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç: https://supermock.ru"; \
	else \
		echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–∞–π—Ç–æ–º: https://supermock.ru"; \
	fi
	@echo "üîå –¢–µ—Å—Ç–∏—Ä—É–µ–º API..."
	@if curl -s -o /dev/null -w "%{http_code}" https://api.supermock.ru/api/health | grep -q "200"; then \
		echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç: https://api.supermock.ru/api/health"; \
	else \
		echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å API: https://api.supermock.ru/api/health"; \
	fi

monitor: ## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤
	@echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
	@ssh -i $(SSH_KEY) $(SERVER) "cd $(REMOTE_PATH) && docker-compose -f docker-compose.prod.yml ps"
	@echo ""
	@echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
	@ssh -i $(SSH_KEY) $(SERVER) "df -h $(REMOTE_PATH)"
	@echo ""
	@echo "üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
	@ssh -i $(SSH_KEY) $(SERVER) "free -h"

info: ## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
	@echo "üñ•Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ:"
	@ssh -i $(SSH_KEY) $(SERVER) "uname -a"
	@echo ""
	@echo "üê≥ Docker –≤–µ—Ä—Å–∏—è:"
	@ssh -i $(SSH_KEY) $(SERVER) "docker --version"
	@echo ""
	@echo "üì¶ Docker Compose –≤–µ—Ä—Å–∏—è:"
	@ssh -i $(SSH_KEY) $(SERVER) "docker-compose --version"

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å package.json –∏ pnpm
install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	pnpm install

install-prod: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ production –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	pnpm install --prod

update: ## –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	pnpm update

add: ## –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make add pkg=package-name)
	@if [ -z "$(pkg)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–∞–∫–µ—Ç: make add pkg=package-name"; \
		exit 1; \
	fi
	pnpm add $(pkg)

add-dev: ## –î–æ–±–∞–≤–∏—Ç—å dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make add-dev pkg=package-name)
	@if [ -z "$(pkg)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–∞–∫–µ—Ç: make add-dev pkg=package-name"; \
		exit 1; \
	fi
	pnpm add -D $(pkg)

remove: ## –£–¥–∞–ª–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: make remove pkg=package-name)
	@if [ -z "$(pkg)" ]; then \
		echo "‚ùå –£–∫–∞–∂–∏—Ç–µ –ø–∞–∫–µ—Ç: make remove pkg=package-name"; \
		exit 1; \
	fi
	pnpm remove $(pkg)

build: ## –°–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
	pnpm run build

build-frontend: ## –°–æ–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
	pnpm run build

dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	pnpm run dev

dev-prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤ production —Ä–µ–∂–∏–º–µ –ª–æ–∫–∞–ª—å–Ω–æ
	pnpm run dev:prod

client: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç
	pnpm run client

server: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ —Å–µ—Ä–≤–µ—Ä
	pnpm run server

server-prod: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –≤ production —Ä–µ–∂–∏–º–µ
	pnpm run server:prod

lint: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ª–∏–Ω—Ç–µ—Ä
	pnpm run lint

db-up: ## –ü–æ–¥–Ω—è—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	pnpm run db:up

db-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	pnpm run db:down

db-studio: ## –û—Ç–∫—Ä—ã—Ç—å Prisma Studio
	pnpm run db:studio

db-migrate: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
	pnpm run db:migrate

db-generate: ## –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å Prisma –∫–ª–∏–µ–Ω—Ç
	pnpm run db:generate

clean: ## –û—á–∏—Å—Ç–∏—Ç—å node_modules –∏ –∫—ç—à
	rm -rf node_modules
	rm -rf frontend/node_modules
	rm -rf backend/node_modules
	rm -rf frontend/dist
	pnpm store prune

clean-install: clean install ## –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Docker
docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑—ã
	docker-compose -f docker-compose.prod.yml build

docker-build-frontend: ## –°–æ–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ frontend –æ–±—Ä–∞–∑
	docker-compose -f docker-compose.prod.yml build frontend

docker-build-backend: ## –°–æ–±—Ä–∞—Ç—å —Ç–æ–ª—å–∫–æ backend –æ–±—Ä–∞–∑
	docker-compose -f docker-compose.prod.yml build backend

docker-push: ## –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ–±—Ä–∞–∑—ã –≤ registry (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
	docker-compose -f docker-compose.prod.yml push

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
check-deps: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	pnpm outdated

check-security: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—è–∑–≤–∏–º–æ—Å—Ç–∏
	pnpm audit

fix-security: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å —É—è–∑–≤–∏–º–æ—Å—Ç–∏
	pnpm audit fix

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
setup: install db-up ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

start: dev ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç (alias –¥–ª—è dev)

stop: db-down ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç
