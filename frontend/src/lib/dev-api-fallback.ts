/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ API –≤ dev —Ä–µ–∂–∏–º–µ
 */

/**
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏ API –≤ dev —Ä–µ–∂–∏–º–µ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—è fallback –¥–∞–Ω–Ω—ã–µ
 */
export function handleApiError<T>(
  error: any,
  fallbackData: T,
  context: string
): T {
  console.error(`API Error in ${context}:`, error);
  
  if (import.meta.env.DEV) {
    console.log(`üîß Dev mode: using fallback data for ${context}`);
    return fallbackData;
  }
  
  throw error;
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–∑–æ–≤ API —Å fallback –¥–ª—è dev —Ä–µ–∂–∏–º–∞
 */
export async function safeApiCall<T>(
  apiCall: () => Promise<T>,
  fallbackData: T,
  context: string
): Promise<T> {
  try {
    return await apiCall();
  } catch (error) {
    return handleApiError(error, fallbackData, context);
  }
}

/**
 * –î–µ–º–æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö API
 */
export const DEMO_DATA = {
  userTools: {
    tools: [
      { id: 1, toolName: 'JavaScript', category: 'frontend' },
      { id: 2, toolName: 'React', category: 'frontend' },
      { id: 3, toolName: 'TypeScript', category: 'frontend' },
      { id: 4, toolName: 'Node.js', category: 'backend' },
    ]
  },
  
  userProfile: {
    id: 'demo_user_123',
    language: 'ru',
    role: 'candidate',
    profession: 'frontend',
  },
  
  slots: {
    slots: [
      { time: '2024-01-15T10:00:00Z', count: 5 },
      { time: '2024-01-15T14:00:00Z', count: 3 },
      { time: '2024-01-15T18:00:00Z', count: 7 },
    ]
  },
  
  notifications: {
    notifications: [
      {
        id: 1,
        type: 'match',
        title: '–ù–∞–π–¥–µ–Ω–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ!',
        message: '–ö–∞–Ω–¥–∏–¥–∞—Ç –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ—Ä–≤—å—é',
        createdAt: new Date().toISOString(),
        read: false,
      }
    ]
  }
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –¥–µ–º–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
 */
export function getDemoToolsForProfession(profession?: string): string[] {
  const professionTools: { [key: string]: string[] } = {
    frontend: ['JavaScript', 'React', 'TypeScript', 'Vue.js'],
    backend: ['Node.js', 'Python', 'Java', 'Go'],
    fullstack: ['JavaScript', 'React', 'Node.js', 'TypeScript'],
    mobile: ['React Native', 'Flutter', 'Swift', 'Kotlin'],
    devops: ['Docker', 'Kubernetes', 'AWS', 'Linux'],
    data: ['Python', 'SQL', 'Pandas', 'TensorFlow'],
  };
  
  return professionTools[profession || 'frontend'] || professionTools.frontend;
}
