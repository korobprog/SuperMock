import { useState, useEffect } from 'react';
import { useTranslation } from 'react-i18next';
import { ProfileHeader } from '@/components/ui/profile-header';
import { MainMenu } from '@/components/ui/main-menu';
import { MobileBottomMenu } from '@/components/ui/mobile-bottom-menu';
import { useNavigate } from 'react-router-dom';
import { useAppStore } from '@/lib/store';
import { useAppTranslation } from '@/lib/i18n';
import { Logo } from '@/components/ui/logo';
import { StyledSubtitle } from '@/components/ui/styled-subtitle';
import {
  detectUserLanguage,
  saveAndApplyLanguage,
  SupportedLanguage,
} from '@/lib/language-detection';
import {
  loadTelegramUser,
  clearTelegramUser,
  forceLogoutFromTelegram,
  saveTelegramUser,
} from '@/lib/telegram-auth';
import { useTelegramFullscreen } from '@/hooks/use-telegram-fullscreen';
import { TelegramLoginWidget } from '@/components/ui/telegram-login';
import { TelegramMiniAppsStatus } from '@/components/ui/telegram-mini-apps-status';
import { createApiUrl } from '@/lib/config';
import { TelegramUser } from '@/lib/telegram-auth';

const Index = () => {
  const [isLanguageDetected, setIsLanguageDetected] = useState(false);
  const { t } = useAppTranslation();
  const { i18n } = useTranslation();
  const { setUserId, setLanguage, setTelegramUser, setRole, setProfession, telegramUser, userId } =
    useAppStore();

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ –≤ Telegram Mini Apps
  useTelegramFullscreen();

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —è–∑—ã–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  useEffect(() => {
    async function initializeApp() {
      try {
        if (import.meta.env.DEV) {
          console.log('üöÄ Starting app initialization...');
          console.log('üîç Current store state:', {
            userId,
            telegramUser,
            hasTelegramUser: !!telegramUser
          });
        }
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫
        const detectedLanguage = await detectUserLanguage();
        setLanguage(detectedLanguage);
        if (import.meta.env.DEV) {
          console.log('üåç Language detected:', detectedLanguage);
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã—Ö–æ–¥–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ —á—Ç–æ
        const justLoggedOut = sessionStorage.getItem('just_logged_out');
        const logoutTimestamp = sessionStorage.getItem('logout_timestamp');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–æ—à–ª–æ –ª–∏ –±–æ–ª—å—à–µ —á–∞—Å–∞ —Å –º–æ–º–µ–Ω—Ç–∞ –≤—ã—Ö–æ–¥–∞
        const isRecentlyLoggedOut =
          justLoggedOut &&
          logoutTimestamp &&
          Date.now() - parseInt(logoutTimestamp) < 60 * 60 * 1000; // 1 —á–∞—Å

        // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –≤—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é, –≤ development –º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å
        if (!isRecentlyLoggedOut || !import.meta.env.DEV) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram Mini Apps –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å (–±–æ–ª–µ–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ)
          const tg = window.Telegram?.WebApp;
          
          if (tg) {
            if (import.meta.env.DEV) {
              console.log('üîß Telegram Mini Apps detected');
              console.log('üîß initData:', tg.initData);
              console.log('üîß initDataUnsafe:', tg.initDataUnsafe);
              console.log('üîß initDataUnsafe.user:', tg.initDataUnsafe?.user);
              console.log('üîß WebApp.ready:', tg.ready);
              console.log('üîß WebApp.platform:', tg.platform);
              console.log('üîß WebApp.version:', tg.version);
            }
            
            if (tg.initDataUnsafe?.user) {
              const tgUser = tg.initDataUnsafe.user;
              if (import.meta.env.DEV) {
                console.log('‚úÖ Telegram Mini Apps user detected:', tgUser);
              }

              // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram Mini Apps
              const telegramUser = {
                id: tgUser.id,
                first_name: tgUser.first_name,
                last_name: tgUser.last_name || '',
                username: tgUser.username || '',
                photo_url: tgUser.photo_url || '',
                auth_date: Math.floor(Date.now() / 1000),
                hash: 'telegram_mini_apps_hash',
              };

              // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              saveTelegramUser(telegramUser);
              // –ò—Å–ø–æ–ª—å–∑—É–µ–º setTelegramUser –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–ø–µ—Ä—å —Å—Ä–∞–∑—É —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç userId
              setTelegramUser(telegramUser);
              // –Ø–≤–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º userId –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
              setUserId(telegramUser.id);
              if (import.meta.env.DEV) {
                console.log('üîß Telegram Mini Apps: userId set to:', telegramUser.id);
              }
            } else if (tg.initData) {
              // –ï—Å–ª–∏ –µ—Å—Ç—å initData, –Ω–æ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–¥–∞–∫—à–Ω
              if (import.meta.env.DEV) {
                console.log('üîß Production mode: initData present but no user data');
                console.log('üîß This is normal in production Telegram WebApp');
              }
              
              // –í –ø—Ä–æ–¥–∞–∫—à–Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ store
              const currentTelegramUser = useAppStore.getState().telegramUser;
              const currentUserId = useAppStore.getState().userId;
              
              if (currentTelegramUser || (currentUserId && currentUserId > 0)) {
                if (import.meta.env.DEV) {
                  console.log('‚úÖ User already authenticated in store, skipping auth block');
                }
                // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
              } else {
                if (import.meta.env.DEV) {
                  console.log('‚ÑπÔ∏è User needs to authenticate in production mode');
                }
                
                // –í Telegram Mini Apps –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Telegram
                // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ Telegram WebApp
                try {
                  // –í –ø—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏–∏ –ù–ï —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                  if (import.meta.env.DEV) {
                    console.log('üîß Production mode: user in Telegram Mini Apps, not showing auth block');
                  } else {
                    // –í –ø—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                    console.log('üîß Production mode: showing auth block for unauthorized users');
                  }
                } catch (error) {
                  if (import.meta.env.DEV) {
                    console.warn('‚ö†Ô∏è Failed to create temporary user:', error);
                  }
                  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                }
              }
            } else {
              // –°–ª—É—á–∞–π 3: –ù–µ—Ç initData - —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∏–ª–∏ –æ—à–∏–±–∫–∞
              if (import.meta.env.DEV) {
                console.log('üîß Telegram Mini Apps detected but no initData');
                console.log('üîß This might be a test environment or error');
              }
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ store
              const currentTelegramUser = useAppStore.getState().telegramUser;
              const currentUserId = useAppStore.getState().userId;
              
              if (currentTelegramUser || (currentUserId && currentUserId > 0)) {
                if (import.meta.env.DEV) {
                  console.log('‚úÖ User already authenticated in store, skipping auth block');
                }
              } else {
                if (import.meta.env.DEV) {
                  console.log('‚ÑπÔ∏è User needs to authenticate - no Telegram data available');
                }
                
                // –í Telegram Mini Apps –ø–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                if (tg.ready && tg.platform !== 'unknown') {
                  if (import.meta.env.DEV) {
                    console.log('üîß Telegram WebApp is ready, creating temporary user');
                    
                    const tempTelegramUser = {
                      id: Date.now(), // –í—Ä–µ–º–µ–Ω–Ω—ã–π ID
                      first_name: 'Telegram User',
                      last_name: '',
                      username: '',
                      photo_url: '',
                      auth_date: Math.floor(Date.now() / 1000),
                      hash: 'telegram_mini_apps_temp_hash',
                    };
                    
                    console.log('üîß Temporary user created for no initData case:', tempTelegramUser);
                    setTelegramUser(tempTelegramUser);
                    setUserId(tempTelegramUser.id);
                    
                    // –í Telegram Mini Apps –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                    console.log('üîß Telegram Mini Apps: user created, not showing auth block');
                  } else {
                    // –í –ø—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏–∏ –Ω–µ —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    console.log('üîß Production mode: not creating temporary user, showing auth block');
                  }
                } else {
                  if (import.meta.env.DEV) {
                    console.log('üîß Telegram WebApp not ready, showing auth block');
                  } else {
                    console.log('üîß Production mode: Telegram WebApp not ready, showing auth block');
                  }
                  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                }
              }
            }
          } else {
            if (import.meta.env.DEV) {
              console.log('üîß No Telegram Mini Apps environment detected');
            }
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –∏–∑ localStorage —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç Telegram WebApp –∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
            const savedTelegramUser = loadTelegramUser();
            if (savedTelegramUser) {
              if (import.meta.env.DEV) {
                console.log('–ó–∞–≥—Ä—É–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram:', savedTelegramUser);
              }
              // –ò—Å–ø–æ–ª—å–∑—É–µ–º setTelegramUser –∫–æ—Ç–æ—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç userId
              setTelegramUser(savedTelegramUser);
              // –Ø–≤–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º userId –¥–ª—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
              setUserId(savedTelegramUser.id);
              if (import.meta.env.DEV) {
                console.log('üîß Saved user: userId set to:', savedTelegramUser.id);
              }
            } else {
              if (import.meta.env.DEV) {
                console.log('–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram');
              }
              // –í –ø—Ä–æ–¥–∞–∫—à–Ω–µ –Ω–µ —Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              if (import.meta.env.DEV) {
                // –í development —Ä–µ–∂–∏–º–µ –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                console.log('Development mode: –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
              } else {
                if (import.meta.env.DEV) {
                  console.log('Production mode: –Ω–µ —Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                } else {
                  console.log('üîß Production mode: –Ω–µ —Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
                }
              }
              setUserId(0);
            }
          }
        } else {
          // –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥–∏ –≤—ã—Ö–æ–¥–∞
          sessionStorage.removeItem('just_logged_out');
          sessionStorage.removeItem('logout_timestamp');
          if (import.meta.env.DEV) {
            console.log('User recently logged out, not loading Telegram data');
          }

          // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ store –∏ localStorage
          setTelegramUser(null);
          setUserId(0);
          localStorage.removeItem('Super Mock-storage');
          localStorage.removeItem('telegram_user');
          
          // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –Ω–µ —Å–æ–∑–¥–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          if (!import.meta.env.DEV) {
            if (import.meta.env.DEV) {
              console.log('Production mode: –æ—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }
            setRole(null);
            setProfession(null);
          }
        }

        setIsLanguageDetected(true);
              } catch (error) {
          if (import.meta.env.DEV) {
            console.error('App initialization error:', error);
          }
          // Fallback –Ω–∞ —Ä—É—Å—Å–∫–∏–π
          saveAndApplyLanguage('ru', i18n, setLanguage);
          setIsLanguageDetected(true);
        }
    }

    initializeApp();
  }, [i18n, setLanguage]);

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ store –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ development)
  useEffect(() => {
    if (import.meta.env.DEV) {
      console.log('üîç Index: Store state changed:', {
        userId,
        telegramUser,
        hasTelegramUser: !!telegramUser,
        timestamp: new Date().toISOString()
      });
      
      // –ï—Å–ª–∏ userId –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ª–æ–≥–∏—Ä—É–µ–º —ç—Ç–æ
      if (userId && userId > 0) {
        console.log('‚úÖ Index: userId successfully set to:', userId);
      }
      
      // –ï—Å–ª–∏ telegramUser –∏–∑–º–µ–Ω–∏–ª—Å—è, –ª–æ–≥–∏—Ä—É–µ–º —ç—Ç–æ
      if (telegramUser) {
        console.log('‚úÖ Index: telegramUser updated:', {
          id: telegramUser.id,
          first_name: telegramUser.first_name,
          username: telegramUser.username
        });
      }
    }
  }, [userId, telegramUser]);

  const handleLogout = () => {
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ Telegram –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
    if (telegramUser) {
      clearTelegramUser();
      setTelegramUser(null);
    }
    setUserId(0);

    // –û—á–∏—â–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ localStorage
    localStorage.removeItem('Super Mock-storage');
    localStorage.removeItem('telegram_user');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –≤—ã—Ö–æ–¥–∞
    sessionStorage.setItem('just_logged_out', 'true');
    sessionStorage.setItem('logout_timestamp', Date.now().toString());

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã—Ö–æ–¥ –∏–∑ Telegram Mini Apps
    forceLogoutFromTelegram();
    
    // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –Ω–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    if (import.meta.env.DEV) {
      setTimeout(() => {
        window.location.reload();
      }, 100);
    }
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É, –ø–æ–∫–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —è–∑—ã–∫
  if (!isLanguageDetected) {
    return (
      <div className="min-h-screen bg-gradient-to-b from-background to-telegram-light-gray p-4 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-primary mx-auto mb-4"></div>
          <p className="text-muted-foreground">
            {t('common.detectingLanguage')}
          </p>
        </div>
      </div>
    );
  }

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–µ (—Ç–æ–ª—å–∫–æ –≤ development)
  if (import.meta.env.DEV) {
    console.log('üîç Index: Rendering with state:', {
      telegramUser,
      userId,
      isLanguageDetected
    });
  }

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω –≤–µ—Ä—Å–∏–∏
  if (import.meta.env.PROD) {
    console.log('üîç Index PRODUCTION: Rendering with state:', {
      telegramUser: telegramUser ? { id: telegramUser.id, first_name: telegramUser.first_name, hash: telegramUser.hash } : null,
      userId,
      isLanguageDetected,
      hasTelegramUser: !!telegramUser,
      isInTelegramMiniApps: !!window.Telegram?.WebApp
    });
  }

  return (
    <div className="min-h-screen bg-gradient-to-b from-background to-telegram-light-gray p-3 sm:p-5 pb-24 md:pb-5">
      <div className="max-w-4xl mx-auto pt-16 sm:pt-20">
        {/* Header */}
        <div className="text-center mb-6">
          <div className="flex justify-center mb-4">
            <Logo size="lg" className="mb-1" clickable={true} />
          </div>
          <StyledSubtitle variant="tech" size="sm">
            {t('common.platformSubtitle')}
          </StyledSubtitle>
        </div>

        {/* Profile Header */}
        <ProfileHeader />

        {/* Main Menu */}
        <MainMenu />
        
        {/* Telegram Mini Apps Status - —Å–∫—Ä—ã—Ç –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ */}
        {import.meta.env.DEV && <TelegramMiniAppsStatus />}
        
        {/* –ë–ª–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ç–µ–ø–µ—Ä—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ ProfileHeader */}
      </div>

      {/* Mobile Bottom Menu */}
      <MobileBottomMenu />
    </div>
  );
};

export default Index;
