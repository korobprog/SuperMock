import { Button } from '@/components/ui/button';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogTitle,
} from '@/components/ui/dialog';
import { AlertTriangle, LogOut } from 'lucide-react';
import { useAppTranslation } from '@/lib/i18n';

interface ExitConfirmDialogProps {
  isOpen: boolean;
  onClose: () => void;
  onConfirm: () => void;
  onComplete: () => void;
  isLoading?: boolean;
}

export function ExitConfirmDialog({
  isOpen,
  onClose,
  onConfirm,
  onComplete,
  isLoading = false,
}: ExitConfirmDialogProps) {
  const { t } = useAppTranslation();

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="sm:max-w-[425px]">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <AlertTriangle className="h-5 w-5 text-orange-500" />
            {t('interview.exitConfirmTitle') || '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ?'}
          </DialogTitle>
          <DialogDescription>
            {t('interview.exitConfirmDescription') ||
              '–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ:'}
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-4 py-4">
          <div className="space-y-3">
            {/* –û–ø—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è */}
            <div className="rounded-lg border border-green-200 bg-green-50 p-4">
              <h4 className="font-medium text-green-800 mb-2">
                {t('interview.completeOption') || '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ'}
              </h4>
              <p className="text-sm text-green-700 mb-3">
                {t('interview.completeDescription') ||
                  '–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –±—É–¥–µ—Ç –ø–æ–º–µ—á–µ–Ω–æ –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–µ. –í—ã —Å–º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–∏–¥–±–µ–∫ –æ –ø–∞—Ä—Ç–Ω–µ—Ä–µ.'}
              </p>
              <Button
                onClick={onComplete}
                disabled={isLoading}
                className="w-full bg-green-600 hover:bg-green-700 text-white"
              >
                {isLoading ? (
                  <div className="flex items-center gap-2">
                    <div className="h-4 w-4 animate-spin rounded-full border-2 border-white border-t-transparent" />
                    {t('common.processing') || '–û–±—Ä–∞–±–æ—Ç–∫–∞...'}
                  </div>
                ) : (
                  <>
                    <LogOut className="mr-2 h-4 w-4" />
                    {t('interview.completeInterview') ||
                      '–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ'}
                  </>
                )}
              </Button>
            </div>

            {/* –û–ø—Ü–∏—è –≤—ã—Ö–æ–¥–∞ */}
            <div className="rounded-lg border border-orange-200 bg-orange-50 p-4">
              <h4 className="font-medium text-orange-800 mb-2">
                {t('interview.exitOption') || 'üö™ –ü—Ä–æ—Å—Ç–æ –≤—ã–π—Ç–∏'}
              </h4>
              <p className="text-sm text-orange-700 mb-3">
                {t('interview.exitDescription') ||
                  '–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º. –í—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ–∑–∂–µ.'}
              </p>
              <Button
                onClick={onConfirm}
                disabled={isLoading}
                variant="outline"
                className="w-full border-orange-300 text-orange-700 hover:bg-orange-100"
              >
                {t('interview.justExit') || '–ü—Ä–æ—Å—Ç–æ –≤—ã–π—Ç–∏'}
              </Button>
            </div>
          </div>
        </div>

        <DialogFooter>
          <Button variant="outline" onClick={onClose} disabled={isLoading}>
            {t('common.cancel') || '–û—Ç–º–µ–Ω–∞'}
          </Button>
        </DialogFooter>
      </DialogContent>
    </Dialog>
  );
}
