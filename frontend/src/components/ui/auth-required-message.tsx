import React, { useEffect, useState } from 'react';
import { useAppTranslation } from '@/lib/i18n';
import { TelegramLoginWidget, TelegramWebLogin, TelegramProductionLogin } from './telegram-login';
import { env } from '@/lib/env';
import { TelegramUser } from '@/lib/telegram-auth';

interface AuthRequiredMessageProps {
  onAuth: (user: TelegramUser) => void;
  className?: string;
}

export function AuthRequiredMessage({ onAuth, className = '' }: AuthRequiredMessageProps) {
  const { t } = useAppTranslation();
  const [isTelegramMiniApps, setIsTelegramMiniApps] = useState(false);
  const [miniAppUser, setMiniAppUser] = useState<any>(null);

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ Telegram Mini Apps
    const checkTelegramMiniApps = () => {
      if (window.Telegram?.WebApp) {
        const tg = window.Telegram.WebApp;
        console.log('üîß AuthRequiredMessage: Detected Telegram Mini Apps environment');
        console.log('üîß WebApp initData:', tg.initData);
        console.log('üîß WebApp initDataUnsafe:', tg.initDataUnsafe);
        
        setIsTelegramMiniApps(true);
        
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Mini Apps
        if (tg.initDataUnsafe?.user) {
          console.log('üîß AuthRequiredMessage: User already authenticated in Mini Apps:', tg.initDataUnsafe.user);
          setMiniAppUser(tg.initDataUnsafe.user);
        }
      } else {
        console.log('üîß AuthRequiredMessage: Not in Telegram Mini Apps environment');
        setIsTelegramMiniApps(false);
      }
    };

    checkTelegramMiniApps();
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è Mini Apps
  const handleMiniAppAuth = () => {
    if (miniAppUser) {
      console.log('üîß AuthRequiredMessage: Processing Mini Apps user:', miniAppUser);
      
      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
      const telegramUser: TelegramUser = {
        id: miniAppUser.id,
        first_name: miniAppUser.first_name,
        last_name: miniAppUser.last_name || '',
        username: miniAppUser.username || '',
        photo_url: miniAppUser.photo_url || '',
        auth_date: Math.floor(Date.now() / 1000),
        hash: 'telegram_mini_apps_hash',
      };
      
      onAuth(telegramUser);
    } else {
      console.log('üîß AuthRequiredMessage: No Mini Apps user data available');
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Telegram
      if (window.Telegram?.WebApp?.MainButton) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º MainButton –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        window.Telegram.WebApp.MainButton.setText('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
        window.Telegram.WebApp.MainButton.show();
      }
    }
  };

  // –ï—Å–ª–∏ –º—ã –≤ Telegram Mini Apps, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  if (isTelegramMiniApps) {
    return (
      <div className={`bg-blue-50 border border-blue-200 rounded-lg p-6 text-center ${className}`}>
        <div className="mb-4">
          <div className="mx-auto w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mb-4">
            <svg className="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 15v2m-6 4h12a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
          </div>
          <h3 className="text-lg font-semibold text-blue-900 mb-2">
            {miniAppUser ? '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Telegram Mini Apps' : '–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'}
          </h3>
          <p className="text-blue-700 mb-4">
            {miniAppUser 
              ? `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${miniAppUser.first_name}!`
              : '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ Telegram Mini Apps'
            }
          </p>
        </div>
        
        {miniAppUser ? (
          <button
            onClick={handleMiniAppAuth}
            className="w-full bg-[#0088cc] hover:bg-[#006fa0] text-white font-medium py-2 px-4 rounded-lg transition-colors"
          >
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
          </button>
        ) : (
          // –í Telegram Mini Apps –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
          <div className="space-y-3">
            <p className="text-sm text-blue-600 p-3 bg-blue-100 rounded border">
              –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –≤ Telegram
            </p>
            {env.TELEGRAM_BOT_NAME ? (
              <TelegramProductionLogin
                botName={env.TELEGRAM_BOT_NAME}
                onAuth={onAuth}
                className="w-full"
              />
            ) : (
              <div className="text-sm text-red-500 p-3 bg-red-50 rounded border">
                –û—à–∏–±–∫–∞: VITE_TELEGRAM_BOT_NAME –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
                <br />
                <small>–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {String(env.TELEGRAM_BOT_NAME)}</small>
              </div>
            )}
          </div>
        )}
        
        <p className="text-xs text-blue-600 mt-3">
          –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–∏–º –¥–∞–Ω–Ω—ã–º
        </p>
      </div>
    );
  }

  // –î–ª—è –æ–±—ã—á–Ω–æ–≥–æ –±—Ä–∞—É–∑–µ—Ä–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  return (
    <div className={`bg-blue-50 border border-blue-200 rounded-lg p-6 text-center ${className}`}>
      <div className="mb-4">
        <div className="mx-auto w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mb-4">
          <svg className="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 15v2m-6 4h12a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
          </svg>
        </div>
        <h3 className="text-lg font-semibold text-blue-900 mb-2">
          –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        </h3>
        <p className="text-blue-700 mb-4">
          –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram
        </p>
      </div>
      
      {env.TELEGRAM_BOT_NAME ? (
        // –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ–±-–≤–µ—Ä—Å–∏—é –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        import.meta.env.PROD ? (
          <TelegramProductionLogin
            botName={env.TELEGRAM_BOT_NAME}
            onAuth={onAuth}
            className="w-full"
          />
        ) : (
          // –í dev —Ä–µ–∂–∏–º–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π –≤–∏–¥–∂–µ—Ç
          <TelegramLoginWidget
            botName={env.TELEGRAM_BOT_NAME}
            onAuth={onAuth}
            className="w-full"
          />
        )
      ) : (
        <div className="text-sm text-red-500 p-3 bg-red-50 rounded border">
          –û—à–∏–±–∫–∞: VITE_TELEGRAM_BOT_NAME –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
        </div>
      )}
      
      <p className="text-xs text-blue-600 mt-3">
        –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ Telegram –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–∏–º –¥–∞–Ω–Ω—ã–º
      </p>
    </div>
  );
}
