import { useNavigate, useLocation } from 'react-router-dom';
import { Settings, Bell, Users, Home, Briefcase } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { useAppTranslation } from '@/lib/i18n';
import { useHapticFeedback } from '@/lib/haptic-feedback';
import { useUserDataCheck } from '@/hooks/use-user-data-check';
import { useOnboardingStatus } from '@/hooks/use-onboarding-status';
import { useAppStore } from '@/lib/store';

export function MobileBottomMenu() {
  const navigate = useNavigate();
  const location = useLocation();
  const { t } = useAppTranslation();
  const { light } = useHapticFeedback();
  const { isDataComplete } = useUserDataCheck();
  const { isComplete: isOnboardingComplete } = useOnboardingStatus();
  
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ store
  const profession = useAppStore((s) => s.profession);
  const language = useAppStore((s) => s.language);
  const selectedTools = useAppStore((s) => s.selectedTools);
  const userId = useAppStore((s) => s.userId);
  const userSettings = useAppStore((s) => s.userSettings);
  const hasApiKey = !!userSettings.openrouterApiKey;

  const isHomeActive = location.pathname === '/';
  const isProfileActive = location.pathname === '/profile';
  const isNotificationsActive = location.pathname === '/notifications';
  const isProfessionActive = location.pathname === '/profession';

  const handleNavigation = (path: string) => {
    light(); // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
    navigate(path);
  };

  const handleStartInterview = () => {
    light(); // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏
    
    console.log('üéØ Smart navigation check:');
    console.log('  - profession:', profession);
    console.log('  - language:', language);
    console.log('  - selectedTools:', selectedTools);
    console.log('  - selectedTools.length:', selectedTools.length);
    console.log('  - userId:', userId);
    console.log('  - isOnboardingComplete:', isOnboardingComplete);
    console.log('  - hasApiKey:', hasApiKey);
    
    // –ï—Å–ª–∏ onboarding –∑–∞–≤–µ—Ä—à–µ–Ω, –∏–¥–µ–º —Å—Ä–∞–∑—É –Ω–∞ –≤—Ä–µ–º—è
    if (isOnboardingComplete) {
      console.log('üöÄ Onboarding –∑–∞–≤–µ—Ä—à–µ–Ω, –ø—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ /time');
      navigate('/time');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∏ —è–∑—ã–∫
    const hasProfessionAndLanguage = profession && language;
    
    console.log('  - hasProfessionAndLanguage:', hasProfessionAndLanguage);
    console.log('  - hasProfessionAndLanguage && selectedTools.length > 0:', hasProfessionAndLanguage && selectedTools.length > 0);
    
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—è, —è–∑—ã–∫ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –Ω–æ –Ω–µ—Ç API –∫–ª—é—á–∞, –∏–¥–µ–º –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É API
    if (hasProfessionAndLanguage && selectedTools.length > 0 && !hasApiKey) {
      console.log('üîë –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ /api-key-setup: –Ω—É–∂–µ–Ω API –∫–ª—é—á');
      navigate('/api-key-setup');
    }
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—è, —è–∑—ã–∫ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã, –∏–¥–µ–º —Å—Ä–∞–∑—É –Ω–∞ –≤—Ä–µ–º—è
    else if (hasProfessionAndLanguage && selectedTools.length > 0) {
      console.log('üöÄ –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ /time: –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∏ —è–∑—ã–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
      navigate('/time');
    }
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∏ —è–∑—ã–∫, –Ω–æ –Ω–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤, –∏–¥–µ–º –Ω–∞ –≤—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    else if (hasProfessionAndLanguage && selectedTools.length === 0) {
      console.log('üîß –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ /tools: –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –∏ —è–∑—ã–∫ –µ—Å—Ç—å, –Ω—É–∂–Ω—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã');
      navigate(`/tools?profession=${profession}`);
    }
    // –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—è, –Ω–æ –Ω–µ—Ç —è–∑—ã–∫–∞, –∏–¥–µ–º –Ω–∞ –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    else if (profession && !language) {
      console.log('üåç –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ /language: –ø—Ä–æ—Ñ–µ—Å—Å–∏—è –µ—Å—Ç—å, –Ω—É–∂–µ–Ω —è–∑—ã–∫');
      navigate('/language');
    }
    // –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –∏–¥–µ–º –Ω–∞ –≤—ã–±–æ—Ä –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
    else {
      console.log('üíº –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ /profession: –Ω—É–∂–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è');
      navigate('/profession');
    }
  };

  return (
    <div className="fixed bottom-0 left-0 right-0 bg-white/70 dark:bg-gray-900/70 backdrop-blur-md border-t border-gray-200/50 dark:border-gray-700/50 px-3 py-4 md:hidden z-50 shadow-[0_-8px_32px_rgba(0,0,0,0.1)] dark:shadow-[0_-8px_32px_rgba(0,0,0,0.3)]">
      <div className="flex items-center justify-between max-w-md mx-auto">
        {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–º–æ–π */}
        <Button
          variant="ghost"
          size="sm"
          onClick={() => handleNavigation('/')}
          className={`flex items-center justify-center w-12 h-12 rounded-full transition-all duration-300 hover:scale-110 active:scale-95 ${
            isHomeActive
              ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-[0_4px_16px_rgba(59,130,246,0.3)]'
              : 'bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-700 text-gray-600 dark:text-gray-300 hover:from-gray-200 hover:to-gray-300 dark:hover:from-gray-700 dark:hover:to-gray-600 hover:text-gray-900 dark:hover:text-white hover:shadow-[0_4px_16px_rgba(0,0,0,0.15)]'
          }`}
        >
          <Home className="h-5 w-5" />
        </Button>

        {/* –ë–æ–ª—å—à–∞—è –ø–æ–ª—É–∫—Ä—É–≥–ª–∞—è –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∏–Ω—Ç–µ—Ä–≤—å—é" –ø–æ —Ü–µ–Ω—Ç—Ä—É */}
        <div className="relative">
          <Button
            onClick={handleStartInterview}
            className={`flex items-center justify-center w-16 h-16 rounded-full shadow-[0_8px_32px_rgba(59,130,246,0.4)] hover:shadow-[0_12px_40px_rgba(59,130,246,0.6)] transform hover:scale-110 active:scale-95 transition-all duration-300 -mt-4 border-4 backdrop-blur-sm ${
              profession && language && language !== 'ru' && selectedTools.length > 0
                ? 'bg-gradient-to-r from-green-500 to-emerald-600 border-green-300/30' // –ì–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ—Ä–≤—å—é
                : profession && language && language !== 'ru'
                ? 'bg-gradient-to-r from-yellow-500 to-orange-600 border-yellow-300/30' // –ù—É–∂–Ω—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
                : profession
                ? 'bg-gradient-to-r from-blue-500 to-purple-600 border-blue-300/30' // –ù—É–∂–µ–Ω —è–∑—ã–∫
                : 'bg-gradient-to-r from-gray-500 to-gray-600 border-gray-300/30' // –ù—É–∂–Ω–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—è
            } text-white`}
          >
            <Users className="h-7 w-7" />
          </Button>
          
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ */}
          {profession && (
            <div className="absolute -top-1 -right-1 w-4 h-4 bg-white rounded-full flex items-center justify-center shadow-lg">
              <div className={`w-2 h-2 rounded-full ${
                profession && language && language !== 'ru' && selectedTools.length > 0
                  ? 'bg-green-500' // –ì–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ—Ä–≤—å—é
                  : profession && language && language !== 'ru'
                  ? 'bg-yellow-500' // –ù—É–∂–Ω—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
                  : 'bg-blue-500' // –ù—É–∂–µ–Ω —è–∑—ã–∫
              }`} />
            </div>
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π */}
        <Button
          variant="ghost"
          size="sm"
          onClick={() => handleNavigation('/notifications')}
          className={`flex items-center justify-center w-12 h-12 rounded-full transition-all duration-300 hover:scale-110 active:scale-95 ${
            isNotificationsActive
              ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-[0_4px_16px_rgba(59,130,246,0.3)]'
              : 'bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-700 text-gray-600 dark:text-gray-300 hover:from-gray-200 hover:to-gray-300 dark:hover:from-gray-700 dark:hover:to-gray-600 hover:text-gray-900 dark:hover:text-white hover:shadow-[0_4px_16px_rgba(0,0,0,0.15)]'
          }`}
        >
          <Bell className="h-5 w-5" />
        </Button>

           {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ */}
           <Button
          variant="ghost"
          size="sm"
          onClick={() => handleNavigation('/profile')}
          className={`flex items-center justify-center w-12 h-12 rounded-full transition-all duration-300 hover:scale-110 active:scale-95 ${
            isProfileActive
              ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white shadow-[0_4px_16px_rgba(59,130,246,0.3)]'
              : 'bg-gradient-to-r from-gray-100 to-gray-200 dark:from-gray-800 dark:to-gray-700 text-gray-600 dark:text-gray-300 hover:from-gray-200 hover:to-gray-300 dark:hover:from-gray-700 dark:hover:to-gray-600 hover:text-gray-900 dark:hover:text-white hover:shadow-[0_4px_16px_rgba(0,0,0,0.15)]'
          }`}
        >
          <Settings className="h-5 w-5" />
        </Button>
      </div>
    </div>
  );
}
