import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function checkUsers() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∏—Ö —Å–ª–æ—Ç–æ–≤...\n');

    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏
    const users = await prisma.user.findMany({
      include: {
        preferences: true,
        queues: true
      }
    });

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}\n`);

    users.forEach(user => {
      const prefs = user.preferences[0];
      const queueEntries = user.queues;
      
      console.log(`üë§ ${user.name} (ID: ${user.id})`);
      console.log(`   –†–æ–ª—å: ${prefs?.role || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
      console.log(`   –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: ${prefs?.profession || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
      console.log(`   –Ø–∑—ã–∫: ${prefs?.language || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
      console.log(`   –°–ª–æ—Ç—ã UTC: ${prefs?.slotsUtc || '–Ω–µ—Ç'}`);
      console.log(`   –í –æ—á–µ—Ä–µ–¥–∏: ${queueEntries.length} –∑–∞–ø–∏—Å–µ–π`);
      
      if (queueEntries.length > 0) {
        queueEntries.forEach(entry => {
          console.log(`     - ${entry.slotUtc} (${entry.role})`);
        });
      }
      console.log('');
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
    console.log('üìã –í—Å–µ –∑–∞–ø–∏—Å–∏ –≤ –æ—á–µ—Ä–µ–¥–∏:');
    const allQueueEntries = await prisma.userQueue.findMany({
      include: {
        user: true
      },
      orderBy: {
        slotUtc: 'asc'
      }
    });

    allQueueEntries.forEach(entry => {
      console.log(`   ${entry.slotUtc} - ${entry.user.name} (${entry.role})`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkUsers();
