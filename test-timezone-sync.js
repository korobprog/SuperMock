#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ —á–∞—Å–æ–≤—ã–º–∏ –ø–æ—è—Å–∞–º–∏
 */

import { DateTime } from 'luxon';

// –¢–µ—Å—Ç–æ–≤—ã–µ —á–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞
const timezones = [
  { name: '–ú–æ—Å–∫–≤–∞', zone: 'Europe/Moscow', offset: 'UTC+3' },
  { name: '–í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫', zone: 'Asia/Vladivostok', offset: 'UTC+10' },
  { name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', zone: 'Asia/Yekaterinburg', offset: 'UTC+5' },
  { name: '–õ–æ–Ω–¥–æ–Ω', zone: 'Europe/London', offset: 'UTC+0' },
  { name: '–ù—å—é-–ô–æ—Ä–∫', zone: 'America/New_York', offset: 'UTC-5' },
  { name: '–õ–æ—Å-–ê–Ω–¥–∂–µ–ª–µ—Å', zone: 'America/Los_Angeles', offset: 'UTC-8' },
  { name: '–¢–æ–∫–∏–æ', zone: 'Asia/Tokyo', offset: 'UTC+9' },
  { name: '–î—É–±–∞–π', zone: 'Asia/Dubai', offset: 'UTC+4' },
];

// –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ UTC
function convertLocalToUTC(localTime, timezone) {
  const [hours, minutes] = localTime.split(':').map(Number);
  const localDate = DateTime.now().setZone(timezone);
  const slotDate = localDate.set({ hour: hours, minute: minutes, second: 0, millisecond: 0 });
  const utcDate = slotDate.toUTC();
  return utcDate.toFormat('HH:mm');
}

// –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ UTC –≤—Ä–µ–º–µ–Ω–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ
function convertUTCToLocal(utcTime, timezone) {
  const [hours, minutes] = utcTime.split(':').map(Number);
  const utcDate = DateTime.utc().set({ hour: hours, minute: minutes, second: 0, millisecond: 0 });
  const localDate = utcDate.setZone(timezone);
  return localDate.toFormat('HH:mm');
}

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è UTC —Å–ª–æ—Ç–∞ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
function createUTCSlotFromLocal(localTime, timezone) {
  const [hours, minutes] = localTime.split(':').map(Number);
  const localDate = DateTime.now().setZone(timezone);
  const slotDate = localDate.set({ hour: hours, minute: minutes, second: 0, millisecond: 0 });
  const utcDate = slotDate.toUTC();
  return utcDate.toISO();
}

// –¢–µ—Å—Ç–æ–≤—ã–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã
const testSlots = ['09:00', '12:00', '15:00', '18:00', '21:00'];

console.log('üåç –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏\n');

// –¢–µ—Å—Ç 1: –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–∑ –ú–æ—Å–∫–≤—ã –≤ –¥—Ä—É–≥–∏–µ —á–∞—Å–æ–≤—ã–µ –ø–æ—è—Å–∞
console.log('üìã –¢–µ—Å—Ç 1: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ú–æ—Å–∫–≤–µ –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª–æ—Ç—ã\n');

const moscowZone = 'Europe/Moscow';
testSlots.forEach(slot => {
  const utcTime = convertLocalToUTC(slot, moscowZone);
  const utcSlot = createUTCSlotFromLocal(slot, moscowZone);
  
  console.log(`–ú–æ—Å–∫–≤–∞: ${slot} ‚Üí UTC: ${utcTime} (${utcSlot})`);
  
  timezones.forEach(tz => {
    if (tz.zone !== moscowZone) {
      const localTime = convertUTCToLocal(utcTime, tz.zone);
      console.log(`  ${tz.name} (${tz.offset}): ${localTime}`);
    }
  });
  console.log('');
});

// –¢–µ—Å—Ç 2: –û–±—Ä–∞—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è
console.log('üìã –¢–µ—Å—Ç 2: –û–±—Ä–∞—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è (–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏)\n');

testSlots.forEach(slot => {
  const utcTime = convertLocalToUTC(slot, moscowZone);
  const backToMoscow = convertUTCToLocal(utcTime, moscowZone);
  
  console.log(`–ú–æ—Å–∫–≤–∞: ${slot} ‚Üí UTC: ${utcTime} ‚Üí –ú–æ—Å–∫–≤–∞: ${backToMoscow} ${slot === backToMoscow ? '‚úÖ' : '‚ùå'}`);
});

// –¢–µ—Å—Ç 3: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏
console.log('\nüìã –¢–µ—Å—Ç 3: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –º–∞—Ç—á–∏–Ω–≥–∞\n');

const scenarios = [
  {
    name: '–£—Ç—Ä–µ–Ω–Ω–µ–µ –∏–Ω—Ç–µ—Ä–≤—å—é',
    moscowTime: '10:00',
    description: '–ö–∞–Ω–¥–∏–¥–∞—Ç –≤ –ú–æ—Å–∫–≤–µ –≤—ã–±–∏—Ä–∞–µ—Ç —É—Ç—Ä–µ–Ω–Ω–µ–µ –≤—Ä–µ–º—è'
  },
  {
    name: '–î–Ω–µ–≤–Ω–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é',
    moscowTime: '14:00',
    description: '–ö–∞–Ω–¥–∏–¥–∞—Ç –≤ –ú–æ—Å–∫–≤–µ –≤—ã–±–∏—Ä–∞–µ—Ç –¥–Ω–µ–≤–Ω–æ–µ –≤—Ä–µ–º—è'
  },
  {
    name: '–í–µ—á–µ—Ä–Ω–µ–µ –∏–Ω—Ç–µ—Ä–≤—å—é',
    moscowTime: '19:00',
    description: '–ö–∞–Ω–¥–∏–¥–∞—Ç –≤ –ú–æ—Å–∫–≤–µ –≤—ã–±–∏—Ä–∞–µ—Ç –≤–µ—á–µ—Ä–Ω–µ–µ –≤—Ä–µ–º—è'
  }
];

scenarios.forEach(scenario => {
  console.log(`\nüéØ ${scenario.name}: ${scenario.description}`);
  console.log(`–ú–æ—Å–∫–≤–∞: ${scenario.moscowTime}`);
  
  const utcTime = convertLocalToUTC(scenario.moscowTime, moscowZone);
  console.log(`UTC: ${utcTime}`);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è –≤ –∫–ª—é—á–µ–≤—ã—Ö –≥–æ—Ä–æ–¥–∞—Ö
  const keyCities = ['Asia/Vladivostok', 'America/New_York', 'Europe/London', 'Asia/Tokyo'];
  keyCities.forEach(zone => {
    const localTime = convertUTCToLocal(utcTime, zone);
    const cityName = timezones.find(tz => tz.zone === zone)?.name || zone;
    console.log(`${cityName}: ${localTime}`);
  });
});

// –¢–µ—Å—Ç 4: –ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏
console.log('\nüìã –¢–µ—Å—Ç 4: –ì—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏\n');

const edgeCases = [
  { time: '00:00', description: '–ü–æ–ª–Ω–æ—á—å' },
  { time: '23:59', description: '–ü–æ—á—Ç–∏ –ø–æ–ª–Ω–æ—á—å' },
  { time: '12:00', description: '–ü–æ–ª–¥–µ–Ω—å' }
];

edgeCases.forEach(case_ => {
  console.log(`\n‚è∞ ${case_.description}: ${case_.time}`);
  
  timezones.slice(0, 4).forEach(tz => {
    const utcTime = convertLocalToUTC(case_.time, tz.zone);
    console.log(`${tz.name}: ${case_.time} ‚Üí UTC: ${utcTime}`);
  });
});

// –¢–µ—Å—Ç 5: –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
console.log('\nüìã –¢–µ—Å—Ç 5: –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–∞—Ö\n');

const now = DateTime.now();
timezones.forEach(tz => {
  const localTime = now.setZone(tz.zone);
  console.log(`${tz.name} (${tz.offset}): ${localTime.toFormat('HH:mm')} - ${localTime.toFormat('EEEE, dd MMMM yyyy')}`);
});

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
console.log('‚Ä¢ –í—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–ª–æ—Ç—ã –¥–æ–ª–∂–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è');
console.log('‚Ä¢ –û–±—Ä–∞—Ç–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è');
console.log('‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –¥–æ–ª–∂–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≥—Ä–∞–Ω–∏—Ü—ã –¥–Ω–µ–π');
console.log('‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤ –¥–æ–ª–∂–Ω—ã –≤–∏–¥–µ—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –≤—Ä–µ–º—è');
