apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-green
  namespace: supermock
  labels:
    app: backend
    version: green
spec:
  replicas: 3
  selector:
    matchLabels:
      app: backend
      version: green
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: backend
        version: green
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-status: 'update'
        vault.hashicorp.com/role: 'supermock-role'
        vault.hashicorp.com/agent-inject-secret-config.env: 'secret/data/supermock'
        vault.hashicorp.com/agent-inject-template-config.env: |
          {{- with secret "secret/data/supermock" -}}
          {{- range $k, $v := .Data.data -}}
          export {{ $k }}={{ $v }}
          {{- end -}}
          {{- end -}}
    spec:
      serviceAccountName: supermock-sa
      containers:
        - name: backend
          image: ${DOCKER_USERNAME}/supermock-backend:green
          ports:
            - containerPort: 4000
          env:
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: supermock-config
                  key: NODE_ENV
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: supermock-config
                  key: HOST
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: supermock-config
                  key: PORT
            - name: USE_MONGODB
              valueFrom:
                configMapKeyRef:
                  name: supermock-config
                  key: USE_MONGODB
            - name: USE_REDIS
              valueFrom:
                configMapKeyRef:
                  name: supermock-config
                  key: USE_REDIS
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: supermock-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: supermock-config
                  key: REDIS_PORT
            - name: MONGO_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: supermock-config
                  key: MONGO_DB_NAME
            - name: DEPLOYMENT_VERSION
              value: 'green'
          resources:
            requests:
              memory: '256Mi'
              cpu: '100m'
            limits:
              memory: '512Mi'
              cpu: '300m'
          readinessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 4000
            initialDelaySeconds: 20
            periodSeconds: 10
