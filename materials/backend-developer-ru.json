{
  "profession": "backend-developer",
  "language": "ru",
  "categories": [
    {
      "id": "interview-questions",
      "name": "–í–æ–ø—Ä–æ—Å—ã –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏",
      "count": 156,
      "icon": "üí¨",
      "color": "bg-blue-100 text-blue-800"
    },
    {
      "id": "technical-tasks",
      "name": "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è",
      "count": 89,
      "icon": "‚ö°",
      "color": "bg-green-100 text-green-800"
    },
    {
      "id": "system-design",
      "name": "–°–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏–∑–∞–π–Ω",
      "count": 34,
      "icon": "üèóÔ∏è",
      "color": "bg-purple-100 text-purple-800"
    },
    {
      "id": "behavioral",
      "name": "–ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã",
      "count": 67,
      "icon": "üß†",
      "color": "bg-orange-100 text-orange-800"
    },
    {
      "id": "algorithms",
      "name": "–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö",
      "count": 123,
      "icon": "üìä",
      "color": "bg-red-100 text-red-800"
    },
    {
      "id": "best-practices",
      "name": "–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏",
      "count": 78,
      "icon": "‚≠ê",
      "color": "bg-yellow-100 text-yellow-800"
    }
  ],
  "materials": [
    {
      "id": 1,
      "title": "Node.js: –æ—Å–Ω–æ–≤—ã –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞",
      "description": "–ì–ª—É–±–æ–∫–æ–µ –∏–∑—É—á–µ–Ω–∏–µ Node.js, –µ–≥–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —Ä–∞–±–æ—Ç—ã",
      "category": "interview-questions",
      "difficulty": "intermediate",
      "readTime": 20,
      "rating": 4.8,
      "reads": 1156,
      "tags": ["Node.js", "JavaScript", "Backend", "–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞"],
      "content": "# Node.js: –æ—Å–Ω–æ–≤—ã –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\n\n## –í–≤–µ–¥–µ–Ω–∏–µ\n\nNode.js - —ç—Ç–æ —Å—Ä–µ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è JavaScript –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ —Å–µ—Ä–≤–µ—Ä–∞, –ø–æ—Å—Ç—Ä–æ–µ–Ω–Ω–∞—è –Ω–∞ –¥–≤–∏–∂–∫–µ V8 –æ—Ç Chrome.\n\n## –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ Node.js\n\n```javascript\n// Event Loop\nconsole.log('1');\nsetTimeout(() => console.log('2'), 0);\nsetImmediate(() => console.log('3'));\nprocess.nextTick(() => console.log('4'));\nconsole.log('5');\n\n// –í—ã–≤–æ–¥: 1, 5, 4, 2, 3\n```\n\n## –ú–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞\n\n```javascript\n// CommonJS\nconst fs = require('fs');\nconst path = require('path');\n\n// ES Modules\nimport fs from 'fs';\nimport path from 'path';\n\n// –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥—É–ª—è\nmodule.exports = {\n  add: (a, b) => a + b,\n  subtract: (a, b) => a - b\n};\n```\n\n## –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n```javascript\n// Callbacks\nfs.readFile('file.txt', 'utf8', (err, data) => {\n  if (err) {\n    console.error('–û—à–∏–±–∫–∞:', err);\n    return;\n  }\n  console.log('–î–∞–Ω–Ω—ã–µ:', data);\n});\n\n// Promises\nconst readFilePromise = (filename) => {\n  return new Promise((resolve, reject) => {\n    fs.readFile(filename, 'utf8', (err, data) => {\n      if (err) reject(err);\n      else resolve(data);\n    });\n  });\n};\n\n// Async/Await\nasync function readFiles() {\n  try {\n    const data1 = await readFilePromise('file1.txt');\n    const data2 = await readFilePromise('file2.txt');\n    console.log(data1, data2);\n  } catch (error) {\n    console.error('–û—à–∏–±–∫–∞:', error);\n  }\n}\n```\n\n## HTTP —Å–µ—Ä–≤–µ—Ä\n\n```javascript\nconst http = require('http');\n\nconst server = http.createServer((req, res) => {\n  res.writeHead(200, { 'Content-Type': 'application/json' });\n  \n  const response = {\n    message: '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!',\n    timestamp: new Date().toISOString()\n  };\n  \n  res.end(JSON.stringify(response));\n});\n\nserver.listen(3000, () => {\n  console.log('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');\n});\n```\n\n## Express.js\n\n```javascript\nconst express = require('express');\nconst app = express();\n\n// Middleware\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\n// –†–æ—É—Ç—ã\napp.get('/api/users', (req, res) => {\n  res.json({ users: [] });\n});\n\napp.post('/api/users', (req, res) => {\n  const { name, email } = req.body;\n  // –õ–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n  res.status(201).json({ message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω' });\n});\n\napp.listen(3000, () => {\n  console.log('Express —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');\n});\n```\n\n## –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫\n\n```javascript\n// –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫\nprocess.on('uncaughtException', (err) => {\n  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', err);\n  process.exit(1);\n});\n\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞:', reason);\n});\n\n// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ Express\napp.use((err, req, res, next) => {\n  console.error(err.stack);\n  res.status(500).json({ error: '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!' });\n});\n```\n\n## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ\n\nNode.js –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ—â–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º—ã—Ö —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π. –ü–æ–Ω–∏–º–∞–Ω–∏–µ –µ–≥–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –∏ –ø—Ä–∏–Ω—Ü–∏–ø–æ–≤ —Ä–∞–±–æ—Ç—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ –¥–ª—è backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.",
      "isNew": false,
      "isPopular": true,
      "createdAt": "2024-01-01T00:00:00Z"
    }
  ]
}
