{
  "profession": "frontend-developer",
  "language": "ru",
  "categories": [
    {
      "id": "interview-questions",
      "name": "–í–æ–ø—Ä–æ—Å—ã –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏",
      "count": 156,
      "icon": "üí¨",
      "color": "bg-blue-100 text-blue-800"
    },
    {
      "id": "technical-tasks",
      "name": "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è",
      "count": 89,
      "icon": "‚ö°",
      "color": "bg-green-100 text-green-800"
    },
    {
      "id": "system-design",
      "name": "–°–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏–∑–∞–π–Ω",
      "count": 34,
      "icon": "üèóÔ∏è",
      "color": "bg-purple-100 text-purple-800"
    },
    {
      "id": "behavioral",
      "name": "–ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã",
      "count": 67,
      "icon": "üß†",
      "color": "bg-orange-100 text-orange-800"
    },
    {
      "id": "algorithms",
      "name": "–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö",
      "count": 123,
      "icon": "üìä",
      "color": "bg-red-100 text-red-800"
    },
    {
      "id": "best-practices",
      "name": "–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏",
      "count": 78,
      "icon": "‚≠ê",
      "color": "bg-yellow-100 text-yellow-800"
    }
  ],
  "materials": [
    {
      "id": 1,
      "title": "–¢–æ–ø-50 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ JavaScript",
      "description": "–°–∞–º—ã–µ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö –ø–æ JavaScript —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏ –∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∫–æ–¥–∞",
      "category": "interview-questions",
      "difficulty": "intermediate",
      "readTime": 15,
      "rating": 4.8,
      "reads": 1247,
      "tags": ["JavaScript", "–û—Å–Ω–æ–≤—ã", "ES6+", "–ò–Ω—Ç–µ—Ä–≤—å—é"],
      "content": "# –¢–æ–ø-50 –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ JavaScript\n\n## 1. –ß—Ç–æ —Ç–∞–∫–æ–µ hoisting –≤ JavaScript?\n\nHoisting - —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º JavaScript, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏ —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–¥–Ω–∏–º–∞—é—Ç—Å—è –≤–≤–µ—Ä—Ö —Å–≤–æ–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏.\n\n```javascript\nconsole.log(x); // undefined\nvar x = 5;\n\n// –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä—É–µ—Ç—Å—è –∫–∞–∫:\nvar x;\nconsole.log(x); // undefined\nx = 5;\n```\n\n## 2. –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É var, let –∏ const\n\n- **var**: —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏, –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è (hoisting)\n- **let**: –±–ª–æ—á–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏, –Ω–µ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è\n- **const**: –±–ª–æ—á–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏, –Ω–µ –ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è, –Ω–µ–ª—å–∑—è –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–∏—Ç—å\n\n```javascript\n// var - —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏\nfunction example() {\n  var x = 1;\n  if (true) {\n    var x = 2; // —Ç–∞ –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è\n  }\n  console.log(x); // 2\n}\n\n// let - –±–ª–æ—á–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏\nfunction example2() {\n  let x = 1;\n  if (true) {\n    let x = 2; // –Ω–æ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è\n  }\n  console.log(x); // 1\n}\n```\n\n## 3. –ß—Ç–æ —Ç–∞–∫–æ–µ –∑–∞–º—ã–∫–∞–Ω–∏—è (closures)?\n\n–ó–∞–º—ã–∫–∞–Ω–∏–µ - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º –∏–∑ –≤–Ω–µ—à–Ω–µ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏.\n\n```javascript\nfunction createCounter() {\n  let count = 0;\n  return function() {\n    return ++count;\n  };\n}\n\nconst counter = createCounter();\nconsole.log(counter()); // 1\nconsole.log(counter()); // 2\n```\n\n## 4. Event Loop –≤ JavaScript\n\nEvent Loop - —ç—Ç–æ –º–µ—Ö–∞–Ω–∏–∑–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç JavaScript –≤—ã–ø–æ–ª–Ω—è—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.\n\n```javascript\nconsole.log('1');\nsetTimeout(() => console.log('2'), 0);\nPromise.resolve().then(() => console.log('3'));\nconsole.log('4');\n\n// –í—ã–≤–æ–¥: 1, 4, 3, 2\n```\n\n## 5. Promise –∏ async/await\n\n```javascript\n// Promise\nfunction fetchData() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã');\n    }, 1000);\n  });\n}\n\n// async/await\nasync function getData() {\n  try {\n    const data = await fetchData();\n    console.log(data);\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n## 6. –ü—Ä–æ—Ç–æ—Ç–∏–ø–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ\n\n```javascript\nfunction Animal(name) {\n  this.name = name;\n}\n\nAnimal.prototype.speak = function() {\n  console.log(`${this.name} –∏–∑–¥–∞–µ—Ç –∑–≤—É–∫`);\n};\n\nfunction Dog(name) {\n  Animal.call(this, name);\n}\n\nDog.prototype = Object.create(Animal.prototype);\nDog.prototype.constructor = Dog;\n\nconst dog = new Dog('–†–µ–∫—Å');\ndog.speak(); // –†–µ–∫—Å –∏–∑–¥–∞–µ—Ç –∑–≤—É–∫\n```\n\n## 7. Map vs Object\n\n```javascript\n// Object\nconst obj = {\n  key: 'value'\n};\n\n// Map\nconst map = new Map();\nmap.set('key', 'value');\nmap.set(1, 'number key');\nmap.set({}, 'object key');\n\nconsole.log(map.get('key')); // value\nconsole.log(map.size); // 3\n```\n\n## 8. –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è\n\n```javascript\n// –ú–∞—Å—Å–∏–≤—ã\nconst [a, b, ...rest] = [1, 2, 3, 4, 5];\nconsole.log(a, b, rest); // 1, 2, [3, 4, 5]\n\n// –û–±—ä–µ–∫—Ç—ã\nconst { name, age, ...other } = {\n  name: '–ò–≤–∞–Ω',\n  age: 25,\n  city: '–ú–æ—Å–∫–≤–∞',\n  job: 'Developer'\n};\nconsole.log(name, age, other); // –ò–≤–∞–Ω, 25, {city: '–ú–æ—Å–∫–≤–∞', job: 'Developer'}\n```\n\n## 9. –ú–æ–¥—É–ª–∏ ES6\n\n```javascript\n// math.js\nexport const add = (a, b) => a + b;\nexport const subtract = (a, b) => a - b;\nexport default function multiply(a, b) {\n  return a * b;\n}\n\n// main.js\nimport multiply, { add, subtract } from './math.js';\nconsole.log(add(2, 3)); // 5\nconsole.log(multiply(2, 3)); // 6\n```\n\n## 10. –†–∞–±–æ—Ç–∞ —Å DOM\n\n```javascript\n// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞\nconst div = document.createElement('div');\ndiv.textContent = '–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!';\ndiv.className = 'greeting';\n\ndocument.body.appendChild(div);\n\n// –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤\nconst element = document.querySelector('.greeting');\nconst elements = document.querySelectorAll('.item');\n\n// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π\nconst button = document.querySelector('button');\nbutton.addEventListener('click', (event) => {\n  console.log('–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞!');\n});\n```\n\n–≠—Ç–æ –±–∞–∑–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –ø–æ JavaScript. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è —Å –∫–æ–¥–æ–º –∏ –∏–∑—É—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é.",
      "isNew": false,
      "isPopular": true,
      "createdAt": "2024-01-01T00:00:00Z"
    },
    {
      "id": 2,
      "title": "React Hooks: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ",
      "description": "–ì–ª—É–±–æ–∫–∏–π —Ä–∞–∑–±–æ—Ä –≤—Å–µ—Ö —Ö—É–∫–æ–≤ React —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –ª—É—á—à–∏–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏",
      "category": "best-practices",
      "difficulty": "advanced",
      "readTime": 25,
      "rating": 4.9,
      "reads": 892,
      "tags": ["React", "Hooks", "Frontend", "useState", "useEffect"],
      "content": "# React Hooks: –ø–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\n\n## –í–≤–µ–¥–µ–Ω–∏–µ\n\nReact Hooks –±—ã–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ React 16.8 –∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –¥—Ä—É–≥–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ React –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö.\n\n## useState\n\n–ë–∞–∑–æ–≤—ã–π —Ö—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.\n\n```jsx\nimport React, { useState } from 'react';\n\nfunction Counter() {\n  const [count, setCount] = useState(0);\n  \n  return (\n    <div>\n      <p>–°—á–µ—Ç—á–∏–∫: {count}</p>\n      <button onClick={() => setCount(count + 1)}>\n        –£–≤–µ–ª–∏—á–∏—Ç—å\n      </button>\n    </div>\n  );\n}\n```\n\n### –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ\n\n```jsx\nconst [count, setCount] = useState(0);\n\n// –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ:\nsetCount(count + 1);\n\n// –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ:\nsetCount(prevCount => prevCount + 1);\n```\n\n## useEffect\n\n–•—É–∫ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–±–æ—á–Ω—ã—Ö —ç—Ñ—Ñ–µ–∫—Ç–æ–≤.\n\n```jsx\nimport React, { useState, useEffect } from 'react';\n\nfunction UserProfile({ userId }) {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchUser() {\n      try {\n        const response = await fetch(`/api/users/${userId}`);\n        const userData = await response.json();\n        setUser(userData);\n      } catch (error) {\n        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    fetchUser();\n  }, [userId]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\n\n  if (loading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;\n  if (!user) return <div>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω</div>;\n\n  return (\n    <div>\n      <h2>{user.name}</h2>\n      <p>{user.email}</p>\n    </div>\n  );\n}\n```\n\n### –û—á–∏—Å—Ç–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–æ–≤\n\n```jsx\nuseEffect(() => {\n  const interval = setInterval(() => {\n    console.log('–¢–∏–∫');\n  }, 1000);\n\n  // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏\n  return () => {\n    clearInterval(interval);\n  };\n}, []);\n```\n\n## useContext\n\n–•—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º.\n\n```jsx\n// –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞\nconst ThemeContext = React.createContext();\n\n// –ü—Ä–æ–≤–∞–π–¥–µ—Ä\nfunction App() {\n  const [theme, setTheme] = useState('light');\n\n  return (\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      <Header />\n      <Main />\n    </ThemeContext.Provider>\n  );\n}\n\n// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ\nfunction Header() {\n  const { theme, setTheme } = useContext(ThemeContext);\n\n  return (\n    <header className={`header-${theme}`}>\n      <button onClick={() => setTheme(theme === 'light' ? 'dark' : 'light')}>\n        –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É\n      </button>\n    </header>\n  );\n}\n```\n\n## useReducer\n\n–•—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.\n\n```jsx\nimport React, { useReducer } from 'react';\n\nconst initialState = { count: 0 };\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return { count: state.count + 1 };\n    case 'decrement':\n      return { count: state.count - 1 };\n    case 'reset':\n      return { count: 0 };\n    default:\n      throw new Error();\n  }\n}\n\nfunction Counter() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div>\n      <p>–°—á–µ—Ç—á–∏–∫: {state.count}</p>\n      <button onClick={() => dispatch({ type: 'increment' })}>\n        +\n      </button>\n      <button onClick={() => dispatch({ type: 'decrement' })}>\n        -\n      </button>\n      <button onClick={() => dispatch({ type: 'reset' })}>\n        –°–±—Ä–æ—Å\n      </button>\n    </div>\n  );\n}\n```\n\n## useCallback\n\n–•—É–∫ –¥–ª—è –º–µ–º–æ–∏–∑–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–π.\n\n```jsx\nimport React, { useState, useCallback } from 'react';\n\nfunction Parent() {\n  const [count, setCount] = useState(0);\n\n  const handleClick = useCallback(() => {\n    console.log('–ö–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞');\n  }, []); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\n\n  return (\n    <div>\n      <p>–°—á–µ—Ç—á–∏–∫: {count}</p>\n      <button onClick={() => setCount(count + 1)}>\n        –£–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç—á–∏–∫\n      </button>\n      <Child onClick={handleClick} />\n    </div>\n  );\n}\n\nconst Child = React.memo(function Child({ onClick }) {\n  console.log('Child –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–ª—Å—è');\n  return <button onClick={onClick}>–î–æ—á–µ—Ä–Ω—è—è –∫–Ω–æ–ø–∫–∞</button>;\n});\n```\n\n## useMemo\n\n–•—É–∫ –¥–ª—è –º–µ–º–æ–∏–∑–∞—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π.\n\n```jsx\nimport React, { useState, useMemo } from 'react';\n\nfunction ExpensiveComponent({ items }) {\n  const expensiveValue = useMemo(() => {\n    console.log('–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–æ—Ä–æ–≥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è');\n    return items.reduce((sum, item) => sum + item.value, 0);\n  }, [items]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏\n\n  return <div>–†–µ–∑—É–ª—å—Ç–∞—Ç: {expensiveValue}</div>;\n}\n```\n\n## useRef\n\n–•—É–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–º–µ–Ω—è–µ–º—ã—Ö —Å—Å—ã–ª–æ–∫.\n\n```jsx\nimport React, { useRef, useEffect } from 'react';\n\nfunction TextInputWithFocusButton() {\n  const inputRef = useRef(null);\n\n  const focusInput = () => {\n    inputRef.current.focus();\n  };\n\n  return (\n    <div>\n      <input ref={inputRef} type=\"text\" />\n      <button onClick={focusInput}>–§–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞</button>\n    </div>\n  );\n}\n\n// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n```\n\n## –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ö—É–∫–∏\n\n```jsx\n// useLocalStorage.js\nimport { useState, useEffect } from 'react';\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\n// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\nfunction App() {\n  const [name, setName] = useLocalStorage('name', '–ì–æ—Å—Ç—å');\n\n  return (\n    <div>\n      <input\n        value={name}\n        onChange={e => setName(e.target.value)}\n        placeholder=\"–í–≤–µ–¥–∏—Ç–µ –∏–º—è\"\n      />\n    </div>\n  );\n}\n```\n\n## –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏\n\n1. **–í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ useEffect**\n2. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ useState**\n3. **–ú–µ–º–æ–∏–∑–∏—Ä—É–π—Ç–µ –¥–æ—Ä–æ–≥–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å useMemo**\n4. **–ú–µ–º–æ–∏–∑–∏—Ä—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å useCallback**\n5. **–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ö—É–∫–∏ –¥–ª—è –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–æ–π –ª–æ–≥–∏–∫–∏**\n6. **–ò–∑–±–µ–≥–∞–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –≤ —Ä–µ–Ω–¥–µ—Ä–µ**\n\n## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ\n\nReact Hooks –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –º–æ—â–Ω—ã–π –∏ –≥–∏–±–∫–∏–π —Å–ø–æ—Å–æ–± —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∏ –ø–æ–±–æ—á–Ω—ã–º–∏ —ç—Ñ—Ñ–µ–∫—Ç–∞–º–∏ –≤ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö. –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ö—É–∫–æ–≤ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –±–æ–ª–µ–µ —á–∏—Å—Ç–æ–º—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–º—É –∫–æ–¥—É.",
      "isNew": true,
      "isPopular": true,
      "createdAt": "2024-01-15T00:00:00Z"
    },
    {
      "id": 3,
      "title": "TypeScript: –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–∏–ø—ã",
      "description": "–£–≥–ª—É–±–ª–µ–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ç–∏–ø–æ–≤ TypeScript —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏",
      "category": "interview-questions",
      "difficulty": "advanced",
      "readTime": 18,
      "rating": 4.7,
      "reads": 234,
      "tags": ["TypeScript", "–¢–∏–ø–∏–∑–∞—Ü–∏—è", "Frontend", "–î–∂–µ–Ω–µ—Ä–∏–∫–∏"],
      "content": "# TypeScript: –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–∏–ø—ã\n\n## –í–≤–µ–¥–µ–Ω–∏–µ\n\nTypeScript –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ—â–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Ç–∏–ø–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–≥–∞–µ—Ç –ø–∏—Å–∞—Ç—å –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π –∫–æ–¥. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ç–∏–ø–∏–∑–∞—Ü–∏–∏.\n\n## –£—Å–ª–æ–≤–Ω—ã–µ —Ç–∏–ø—ã (Conditional Types)\n\n```typescript\ntype NonNullable<T> = T extends null | undefined ? never : T;\n\ntype T0 = NonNullable<string | number | null>; // string | number\ntype T1 = NonNullable<string[] | null | undefined>; // string[]\n```\n\n## –ú–∞–ø–ø–∏–Ω–≥ —Ç–∏–ø–æ–≤ (Mapped Types)\n\n```typescript\n// –°–¥–µ–ª–∞—Ç—å –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏\ntype Partial<T> = {\n  [P in keyof T]?: T[P];\n};\n\n// –°–¥–µ–ª–∞—Ç—å –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏\ntype Required<T> = {\n  [P in keyof T]-?: T[P];\n};\n\n// –°–¥–µ–ª–∞—Ç—å –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è\ntype Readonly<T> = {\n  readonly [P in keyof T]: T[P];\n};\n\n// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\ninterface User {\n  id: number;\n  name: string;\n  email?: string;\n}\n\ntype PartialUser = Partial<User>;\n// { id?: number; name?: string; email?: string }\n\ntype RequiredUser = Required<User>;\n// { id: number; name: string; email: string }\n```\n\n## –î–∂–µ–Ω–µ—Ä–∏–∫–∏ (Generics)\n\n```typescript\n// –ü—Ä–æ—Å—Ç–æ–π –¥–∂–µ–Ω–µ—Ä–∏–∫\nfunction identity<T>(arg: T): T {\n  return arg;\n}\n\nconst result = identity<string>('hello');\nconst result2 = identity('hello'); // –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥ —Ç–∏–ø–∞\n\n// –î–∂–µ–Ω–µ—Ä–∏–∫ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏\ninterface Lengthwise {\n  length: number;\n}\n\nfunction loggingIdentity<T extends Lengthwise>(arg: T): T {\n  console.log(arg.length);\n  return arg;\n}\n\nloggingIdentity('hello'); // OK\nloggingIdentity([1, 2, 3]); // OK\n// loggingIdentity(123); // Error\n```\n\n## –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ç–∏–ø—ã\n\n```typescript\n// Pick - –≤—ã–±—Ä–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞\ninterface Todo {\n  title: string;\n  description: string;\n  completed: boolean;\n}\n\ntype TodoPreview = Pick<Todo, 'title' | 'completed'>;\n// { title: string; completed: boolean }\n\n// Omit - –∏—Å–∫–ª—é—á–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞\ntype TodoInfo = Omit<Todo, 'completed'>;\n// { title: string; description: string }\n\n// Record - —Å–æ–∑–¥–∞—Ç—å –æ–±—ä–µ–∫—Ç —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏\ntype CatInfo = {\n  age: number;\n  breed: string;\n};\n\ntype CatName = 'miffy' | 'boris' | 'mordred';\n\nconst cats: Record<CatName, CatInfo> = {\n  miffy: { age: 10, breed: 'Persian' },\n  boris: { age: 5, breed: 'Maine Coon' },\n  mordred: { age: 16, breed: 'British Shorthair' }\n};\n```\n\n## –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ç–∏–ø–æ–≤\n\n```typescript\n// –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∏–ø–æ–≤\ntype Status = 'loading' | 'success' | 'error';\n\ntype ApiResponse<T> = {\n  data: T;\n  status: Status;\n};\n\n// –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ —Ç–∏–ø–æ–≤\ninterface HasName {\n  name: string;\n}\n\ninterface HasAge {\n  age: number;\n}\n\ntype Person = HasName & HasAge;\n// { name: string; age: number }\n\n// –£—Å–ª–æ–≤–Ω—ã–µ —Ç–∏–ø—ã —Å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è–º–∏\ntype ArrayElement<T> = T extends Array<infer U> ? U : never;\n\ntype T0 = ArrayElement<string[]>; // string\ntype T1 = ArrayElement<number[]>; // number\n```\n\n## –ò–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è —Ç–∏–ø–æ–≤\n\n```typescript\n// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–≤–æ–¥ —Ç–∏–ø–∞\nconst names = ['Alice', 'Bob', 'Charlie'];\n// TypeScript –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤—ã–≤–æ–¥–∏—Ç —Ç–∏–ø –∫–∞–∫ string[]\n\n// –í—ã–≤–æ–¥ —Ç–∏–ø–∞ –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö\nfunction map<T, U>(array: T[], fn: (item: T) => U): U[] {\n  return array.map(fn);\n}\n\nconst numbers = [1, 2, 3, 4];\nconst doubled = map(numbers, x => x * 2); // number[]\nconst strings = map(numbers, x => x.toString()); // string[]\n```\n\n## Template Literal Types\n\n```typescript\ntype EmailLocaleIDs = 'welcome_email' | 'email_heading';\ntype FooterLocaleIDs = 'footer_title' | 'footer_sendoff';\n\ntype AllLocaleIDs = `${EmailLocaleIDs | FooterLocaleIDs}_id`;\n// 'welcome_email_id' | 'email_heading_id' | 'footer_title_id' | 'footer_sendoff_id'\n\ntype Lang = 'en' | 'ru';\ntype LocaleMessageIDs = `${Lang}_${AllLocaleIDs}`;\n// 'en_welcome_email_id' | 'en_email_heading_id' | ... | 'ru_footer_sendoff_id'\n```\n\n## –¢–∏–ø—ã –¥–ª—è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\n\n```typescript\nimport React from 'react';\n\n// –¢–∏–ø–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—Å–æ–≤\ninterface ButtonProps {\n  children: React.ReactNode;\n  onClick?: () => void;\n  variant?: 'primary' | 'secondary' | 'danger';\n  size?: 'small' | 'medium' | 'large';\n  disabled?: boolean;\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  onClick,\n  variant = 'primary',\n  size = 'medium',\n  disabled = false\n}) => {\n  return (\n    <button\n      onClick={onClick}\n      className={`btn btn-${variant} btn-${size}`}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\n// –¢–∏–ø–∏–∑–∞—Ü–∏—è —Ö—É–∫–æ–≤\nfunction useLocalStorage<T>(key: string, initialValue: T) {\n  const [storedValue, setStoredValue] = React.useState<T>(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: T | ((val: T) => T)) => {\n    try {\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue] as const;\n}\n```\n\n## –¢–∏–ø—ã –¥–ª—è API\n\n```typescript\n// –¢–∏–ø—ã –¥–ª—è API –æ—Ç–≤–µ—Ç–æ–≤\ninterface ApiResponse<T> {\n  data: T;\n  status: 'success' | 'error';\n  message?: string;\n}\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\n// –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è API\nasync function fetchUser(id: number): Promise<ApiResponse<User>> {\n  const response = await fetch(`/api/users/${id}`);\n  return response.json();\n}\n\n// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\nconst userResponse = await fetchUser(1);\nif (userResponse.status === 'success') {\n  console.log(userResponse.data.name); // TypeScript –∑–Ω–∞–µ—Ç, —á—Ç–æ —ç—Ç–æ User\n}\n```\n\n## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ\n\n–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–∏–ø—ã TypeScript –ø–æ–∑–≤–æ–ª—è—é—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –±–æ–ª–µ–µ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ç–∏–ø—ã. –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ –ª—É—á—à–µ–º—É –∫–∞—á–µ—Å—Ç–≤—É –∫–æ–¥–∞ –∏ —É–º–µ–Ω—å—à–µ–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –æ—à–∏–±–æ–∫ –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.",
      "isNew": true,
      "isPopular": false,
      "createdAt": "2024-01-20T00:00:00Z"
    }
  ]
}
