{
  "profession": "devops-engineer",
  "language": "ru",
  "categories": [
    {
      "id": "interview-questions",
      "name": "–í–æ–ø—Ä–æ—Å—ã –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏",
      "count": 134,
      "icon": "üí¨",
      "color": "bg-blue-100 text-blue-800"
    },
    {
      "id": "technical-tasks",
      "name": "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è",
      "count": 89,
      "icon": "‚ö°",
      "color": "bg-green-100 text-green-800"
    },
    {
      "id": "system-design",
      "name": "–°–∏—Å—Ç–µ–º–Ω—ã–π –¥–∏–∑–∞–π–Ω",
      "count": 45,
      "icon": "üèóÔ∏è",
      "color": "bg-purple-100 text-purple-800"
    },
    {
      "id": "behavioral",
      "name": "–ü–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã",
      "count": 67,
      "icon": "üß†",
      "color": "bg-orange-100 text-orange-800"
    },
    {
      "id": "algorithms",
      "name": "–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö",
      "count": 78,
      "icon": "üìä",
      "color": "bg-red-100 text-red-800"
    },
    {
      "id": "best-practices",
      "name": "–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏",
      "count": 92,
      "icon": "‚≠ê",
      "color": "bg-yellow-100 text-yellow-800"
    }
  ],
  "materials": [
    {
      "id": 1,
      "title": "Docker: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
      "description": "–û—Å–Ω–æ–≤—ã —Ä–∞–±–æ—Ç—ã —Å Docker –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π",
      "category": "interview-questions",
      "difficulty": "intermediate",
      "readTime": 25,
      "rating": 4.9,
      "reads": 2341,
      "tags": ["Docker", "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è", "DevOps", "CI/CD", "–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã"],
      "content": "# Docker: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π\n\n## –í–≤–µ–¥–µ–Ω–∏–µ –≤ Docker\n\nDocker - —ç—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –¥–æ—Å—Ç–∞–≤–∫–∏ –∏ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö.\n\n## –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏\n\n### –û–±—Ä–∞–∑—ã –∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã\n\n```dockerfile\n# –ü—Ä–∏–º–µ—Ä Dockerfile\nFROM node:18-alpine\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm install\n\nCOPY . .\n\nEXPOSE 3000\n\nCMD [\"npm\", \"start\"]\n```\n\n### –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n\n```bash\n# –°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞\ndocker build -t my-app .\n\n# –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞\ndocker run -d -p 3000:3000 --name my-app-container my-app\n\n# –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤\ndocker ps\n\n# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞\ndocker stop my-app-container\n\n# –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞\ndocker rm my-app-container\n```\n\n## Docker Compose\n\n```yaml\n# docker-compose.yml\nversion: '3.8'\n\nservices:\n  app:\n    build: .\n    ports:\n      - \"3000:3000\"\n    environment:\n      - NODE_ENV=production\n    depends_on:\n      - db\n  \n  db:\n    image: postgres:15\n    environment:\n      POSTGRES_DB: myapp\n      POSTGRES_USER: user\n      POSTGRES_PASSWORD: password\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\nvolumes:\n  postgres_data:\n```\n\n## –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏\n\n1. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω—É—é —Å–±–æ—Ä–∫—É –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–±—Ä–∞–∑–æ–≤**\n2. **–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Ç root –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**\n3. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ .dockerignore –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤**\n4. **–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Å–ª–æ–∏ Dockerfile**\n5. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–µ–≥–∏ –≤–µ—Ä—Å–∏–π –≤–º–µ—Å—Ç–æ latest**\n6. **–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ –æ–±—Ä–∞–∑—ã –Ω–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏**\n\n## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n```bash\n# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞\ndocker logs my-app-container\n\n# –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞\ndocker stats my-app-container\n\n# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É\ndocker exec -it my-app-container /bin/sh\n```\n\n## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ\n\nDocker —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–º –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π DevOps –ø—Ä–∞–∫—Ç–∏–∫–µ, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏–π –∏ —É–ø—Ä–æ—â–∞—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.",
      "isNew": false,
      "isPopular": true,
      "createdAt": "2024-01-01T00:00:00Z"
    },
    {
      "id": 2,
      "title": "Kubernetes: –û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤",
      "description": "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ —Å –ø–æ–º–æ—â—å—é Kubernetes",
      "category": "best-practices",
      "difficulty": "advanced",
      "readTime": 30,
      "rating": 4.8,
      "reads": 1876,
      "tags": ["Kubernetes", "K8s", "–û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è", "–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã", "–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ"],
      "content": "# Kubernetes: –û—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤\n\n## –í–≤–µ–¥–µ–Ω–∏–µ –≤ Kubernetes\n\nKubernetes - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è, –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏.\n\n## –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã\n\n### Pod\n\n```yaml\n# pod.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\nspec:\n  containers:\n  - name: nginx\n    image: nginx:latest\n    ports:\n    - containerPort: 80\n```\n\n### Deployment\n\n```yaml\n# deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 80\n```\n\n### Service\n\n```yaml\n# service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\nspec:\n  selector:\n    app: nginx\n  ports:\n  - protocol: TCP\n    port: 80\n    targetPort: 80\n  type: LoadBalancer\n```\n\n## –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã\n\n```bash\n# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\nkubectl apply -f deployment.yaml\n\n# –ü—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–¥–æ–≤\nkubectl get pods\n\n# –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–µ—Ä–≤–∏—Å–æ–≤\nkubectl get services\n\n# –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤\nkubectl logs nginx-pod\n\n# –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ\nkubectl scale deployment nginx-deployment --replicas=5\n\n# –î–æ—Å—Ç—É–ø –∫ –ø–æ–¥—É\nkubectl exec -it nginx-pod -- /bin/bash\n```\n\n## ConfigMaps –∏ Secrets\n\n```yaml\n# configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: app-config\ndata:\n  database_url: \"postgresql://localhost:5432/mydb\"\n  api_key: \"your-api-key\"\n```\n\n```yaml\n# secret.yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: app-secret\ntype: Opaque\ndata:\n  username: dXNlcm5hbWU=  # base64 encoded\n  password: cGFzc3dvcmQ=  # base64 encoded\n```\n\n## –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏\n\n1. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–µ—Å—É—Ä—Å–Ω—ã–µ –ª–∏–º–∏—Ç—ã –∏ –∑–∞–ø—Ä–æ—Å—ã**\n2. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ health checks (liveness –∏ readiness probes)**\n3. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ namespaces –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤**\n4. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ RBAC –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏**\n5. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ persistent volumes –¥–ª—è –¥–∞–Ω–Ω—ã—Ö**\n6. **–ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –∫–ª–∞—Å—Ç–µ—Ä —Å –ø–æ–º–æ—â—å—é Prometheus –∏ Grafana**\n\n## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥\n\n```yaml\n# prometheus-config.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: prometheus-config\ndata:\n  prometheus.yml: |\n    global:\n      scrape_interval: 15s\n    scrape_configs:\n    - job_name: 'kubernetes-pods'\n      kubernetes_sd_configs:\n      - role: pod\n```\n\n## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ\n\nKubernetes –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ—â–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –≤ –º–∞—Å—à—Ç–∞–±–µ, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –≤—ã—Å–æ–∫—É—é –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ.",
      "isNew": true,
      "isPopular": true,
      "createdAt": "2024-01-15T00:00:00Z"
    },
    {
      "id": 3,
      "title": "CI/CD: –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏ –¥–æ—Å—Ç–∞–≤–∫–∞",
      "description": "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è",
      "category": "technical-tasks",
      "difficulty": "intermediate",
      "readTime": 22,
      "rating": 4.7,
      "reads": 1456,
      "tags": ["CI/CD", "Jenkins", "GitLab CI", "GitHub Actions", "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è"],
      "content": "# CI/CD: –ù–µ–ø—Ä–µ—Ä—ã–≤–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏ –¥–æ—Å—Ç–∞–≤–∫–∞\n\n## –í–≤–µ–¥–µ–Ω–∏–µ –≤ CI/CD\n\nCI/CD - —ç—Ç–æ –ø—Ä–∞–∫—Ç–∏–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è.\n\n## GitHub Actions\n\n```yaml\n# .github/workflows/ci.yml\nname: CI/CD Pipeline\n\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    \n    steps:\n    - uses: actions/checkout@v3\n    \n    - name: Setup Node.js\n      uses: actions/setup-node@v3\n      with:\n        node-version: '18'\n        cache: 'npm'\n    \n    - name: Install dependencies\n      run: npm ci\n    \n    - name: Run tests\n      run: npm test\n    \n    - name: Build application\n      run: npm run build\n    \n    - name: Run linting\n      run: npm run lint\n\n  deploy:\n    needs: test\n    runs-on: ubuntu-latest\n    if: github.ref == 'refs/heads/main'\n    \n    steps:\n    - name: Deploy to production\n      run: echo \"Deploying to production...\"\n```\n\n## GitLab CI\n\n```yaml\n# .gitlab-ci.yml\nstages:\n  - test\n  - build\n  - deploy\n\ntest:\n  stage: test\n  image: node:18\n  script:\n    - npm ci\n    - npm test\n    - npm run lint\n  coverage: '/Coverage: \\d+\\.\\d+%/'\n\nbuild:\n  stage: build\n  image: docker:latest\n  services:\n    - docker:dind\n  script:\n    - docker build -t my-app:$CI_COMMIT_SHA .\n    - docker push my-app:$CI_COMMIT_SHA\n  only:\n    - main\n\ndeploy:\n  stage: deploy\n  image: alpine:latest\n  script:\n    - echo \"Deploying to production\"\n    - kubectl set image deployment/my-app my-app=my-app:$CI_COMMIT_SHA\n  only:\n    - main\n```\n\n## Jenkins Pipeline\n\n```groovy\n// Jenkinsfile\npipeline {\n    agent any\n    \n    stages {\n        stage('Checkout') {\n            steps {\n                checkout scm\n            }\n        }\n        \n        stage('Test') {\n            steps {\n                sh 'npm ci'\n                sh 'npm test'\n            }\n        }\n        \n        stage('Build') {\n            steps {\n                sh 'npm run build'\n                sh 'docker build -t my-app .'\n            }\n        }\n        \n        stage('Deploy') {\n            steps {\n                sh 'kubectl apply -f k8s/'\n            }\n        }\n    }\n    \n    post {\n        always {\n            cleanWs()\n        }\n    }\n}\n```\n\n## –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏\n\n1. **–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ –≤—Å–µ —ç—Ç–∞–ø—ã –ø—Ä–æ—Ü–µ—Å—Å–∞**\n2. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á**\n3. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ —Å–±–æ—Ä–∫–∏**\n4. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏**\n5. **–í–Ω–µ–¥—Ä–∏—Ç–µ security scanning**\n6. **–ù–∞—Å—Ç—Ä–æ–π—Ç–µ rollback —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏**\n7. **–ú–æ–Ω–∏—Ç–æ—Ä—å—Ç–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å pipeline**\n\n## –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ –º–µ—Ç—Ä–∏–∫–∏\n\n```yaml\n# prometheus-ci-metrics.yml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ci-metrics\ndata:\n  ci-metrics.yml: |\n    - job_name: 'jenkins'\n      static_configs:\n        - targets: ['jenkins:8080']\n      metrics_path: /prometheus\n```\n\n## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ\n\nCI/CD —è–≤–ª—è–µ—Ç—Å—è –∫–ª—é—á–µ–≤—ã–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π DevOps –ø—Ä–∞–∫—Ç–∏–∫–∏, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±—ã—Å—Ç—Ä—É—é –∏ –Ω–∞–¥–µ–∂–Ω—É—é –¥–æ—Å—Ç–∞–≤–∫—É –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è.",
      "isNew": true,
      "isPopular": false,
      "createdAt": "2024-01-20T00:00:00Z"
    }
  ]
}
