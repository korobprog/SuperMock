#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π production.env —Ñ–∞–π–ª
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * node scripts/setup-telegram-auth-production.js
 */

const fs = require('fs');
const path = require('path');
const fetch = require('node-fetch');

// –ü—É—Ç—å –∫ production.env
const PRODUCTION_ENV_PATH = path.join(__dirname, '..', '..', 'production.env');

function loadProductionEnv() {
  try {
    const envContent = fs.readFileSync(PRODUCTION_ENV_PATH, 'utf8');
    const env = {};
    
    envContent.split('\n').forEach(line => {
      const trimmedLine = line.trim();
      if (trimmedLine && !trimmedLine.startsWith('#')) {
        const [key, ...valueParts] = trimmedLine.split('=');
        if (key && valueParts.length > 0) {
          env[key.trim()] = valueParts.join('=').trim();
        }
      }
    });
    
    return env;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ production.env:', error.message);
    return null;
  }
}

async function testTelegramBot(env) {
  console.log('ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –±–æ—Ç–∞...');
  
  if (!env.TELEGRAM_BOT_TOKEN) {
    console.log('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ production.env');
    return false;
  }

  try {
    const response = await fetch(`https://api.telegram.org/bot${env.TELEGRAM_BOT_TOKEN}/getMe`);
    const data = await response.json();
    
    if (data.ok) {
      console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!');
      console.log(`üì± –ò–º—è –±–æ—Ç–∞: ${data.result.first_name}`);
      console.log(`üÜî Username: @${data.result.username}`);
      console.log(`üÜî ID: ${data.result.id}`);
      return true;
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–æ—Ç–∞:', data.description);
      return false;
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –±–æ—Ç–∞:', error.message);
    return false;
  }
}

function validateConfiguration(env) {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
  
  const requiredVars = [
    'TELEGRAM_BOT_TOKEN',
    'JWT_SECRET',
    'FRONTEND_URL'
  ];
  
  const missingVars = requiredVars.filter(varName => !env[varName]);
  
  if (missingVars.length > 0) {
    console.log('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
    missingVars.forEach(varName => {
      console.log(`   - ${varName}`);
    });
    return false;
  }
  
  console.log('‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const authSettings = {
    'MAX_VERIFICATION_ATTEMPTS': env.MAX_VERIFICATION_ATTEMPTS || '3',
    'VERIFICATION_CODE_EXPIRY': env.VERIFICATION_CODE_EXPIRY || '5',
    'JWT_EXPIRY_DAYS': env.JWT_EXPIRY_DAYS || '30',
    'VERIFICATION_CODE_LENGTH': env.VERIFICATION_CODE_LENGTH || '6',
    'CODE_CLEANUP_INTERVAL': env.CODE_CLEANUP_INTERVAL || '5',
    'MAX_CODES_PER_PHONE': env.MAX_CODES_PER_PHONE || '3'
  };
  
  console.log('üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:');
  Object.entries(authSettings).forEach(([key, value]) => {
    console.log(`   ${key}: ${value}`);
  });
  
  return true;
}

async function testAPI(env) {
  console.log('üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...');
  
  const apiUrl = env.BACKEND_URL || 'http://localhost:3000';
  
  try {
    const response = await fetch(`${apiUrl}/api/telegram-auth/stats`);
    const data = await response.json();
    
    if (response.ok) {
      console.log('‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω');
      console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: ${JSON.stringify(data.stats, null, 2)}`);
      return true;
    } else {
      console.log('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', data.message);
      return false;
    }
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API:', error.message);
    console.log('–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω');
    return false;
  }
}

function showInstructions(env) {
  console.log('\nüìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:');
  console.log('1. –ù–∞–π–¥–∏—Ç–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram: @' + (env.VITE_TELEGRAM_BOT_NAME || 'SuperMock_bot'));
  console.log('2. –ù–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º –∫–æ–º–∞–Ω–¥–æ–π /start');
  console.log('3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ' + env.FRONTEND_URL + '/auth/telegram');
  console.log('4. –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ –∫–æ–¥ –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º');
  
  console.log('\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');
  console.log('- –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –≤–≤–æ–¥–∞ –∫–æ–¥–∞: ' + (env.MAX_VERIFICATION_ATTEMPTS || '3'));
  console.log('- –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫–æ–¥–∞: ' + (env.VERIFICATION_CODE_EXPIRY || '5') + ' –º–∏–Ω—É—Ç');
  console.log('- –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ JWT —Ç–æ–∫–µ–Ω–∞: ' + (env.JWT_EXPIRY_DAYS || '30') + ' –¥–Ω–µ–π');
  console.log('- –î–ª–∏–Ω–∞ –∫–æ–¥–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: ' + (env.VERIFICATION_CODE_LENGTH || '6') + ' —Ü–∏—Ñ—Ä');
  
  console.log('\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:');
  console.log('node scripts/test-telegram-auth.js');
  
  console.log('\nüì° API Endpoints:');
  console.log('- POST /api/telegram-auth/send-code - –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞');
  console.log('- POST /api/telegram-auth/verify-code - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞');
  console.log('- GET /api/telegram-auth/me - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ');
  console.log('- GET /api/telegram-auth/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
}

async function main() {
  console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞\n');
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  const env = loadProductionEnv();
  if (!env) {
    process.exit(1);
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
  if (!validateConfiguration(env)) {
    process.exit(1);
  }
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–æ—Ç–∞
  const botOk = await testTelegramBot(env);
  if (!botOk) {
    console.log('‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...');
  }
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º API
  const apiOk = await testAPI(env);
  if (!apiOk) {
    console.log('‚ö†Ô∏è  API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
  showInstructions(env);
  
  console.log('\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
main().catch(console.error);
