version: '3.8'
services:
  backend:
    image: ${DOCKER_USERNAME:-makstreid}/supermock-backend:latest
    container_name: backend
    ports:
      - '${BACKEND_PORT:-4000}:${PORT:-4000}'
    environment:
      # Если MONGO_URI не задан, используем локальную MongoDB
      - MONGO_URI=${MONGO_URI:-mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/${MONGO_DB_NAME:-mock_interviews}?authSource=admin}
      - JWT_SECRET=${JWT_SECRET}
      - USE_MONGODB=${USE_MONGODB:-true}
      - USE_REDIS=${USE_REDIS:-true}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PORT=${PORT:-4000}
      - NODE_ENV=${NODE_ENV:-production}
      - HOST=${HOST:-0.0.0.0}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - mongo
      - redis
    restart: always
    networks:
      - app-network

  mongo:
    image: mongo:5
    container_name: mongo
    ports:
      - '127.0.0.1:${MONGO_PORT:-27017}:27017'
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      - app-network
    restart: always

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - '127.0.0.1:${REDIS_PORT:-6379}:6379'
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

volumes:
  mongo-data:
  redis-data:

networks:
  app-network:
    driver: bridge
