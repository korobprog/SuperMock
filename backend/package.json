{
  "name": "SuperMock-backend",
  "version": "1.0.0",
  "description": "Приложение для тренировочных собеседований",
  "type": "commonjs",
  "main": "dist/server.js",
  "scripts": {
    "start": "node dist/server.js",
    "dev": "pnpm exec kill-port 3000 || true && pnpm exec nodemon --watch src -e ts --exec ts-node src/server.ts",
    "build": "tsc",
    "watch": "tsc --watch",
    "deploy": "./deploy.sh",
    "db:dev": "bash ./scripts/db-dev.sh",
    "db:prod": "bash ./scripts/db-prod.sh",
    "db:status": "bash ./scripts/db-status.sh",
    "db:stop": "bash ./scripts/db-stop-all.sh",
    "prisma:generate": "npx prisma generate",
    "prisma:push": "bash ./scripts/prisma-push.sh",
    "prisma:seed": "node ./scripts/prisma-seed.js",
    "prisma:sync": "bash ./scripts/prisma-docker-sync.sh",
    "env:check": "node ./scripts/check-env.js",
    "env:generate-secrets": "node ./scripts/generate-secrets.js",
    "env:vault": "node ./scripts/vault-env.js",
    "env:aws": "node ./scripts/aws-secrets.js",
    "env:create-example": "node -e \"const { generateEnvExample } = require('./src/config/validation'); require('fs').writeFileSync('.env.example', generateEnvExample());\"",
    "env:validate": "node -e \"const { validateEnv } = require('./src/config/validation'); validateEnv();\"",
    "docker:dev": "bash ./scripts/docker-compose-env.sh development",
    "docker:staging": "bash ./scripts/docker-compose-env.sh staging",
    "docker:prod": "bash ./scripts/docker-compose-env.sh production",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:build": "docker build -t supermock-backend:latest .",
    "docker:push": "docker tag supermock-backend:latest ${DOCKER_USERNAME:-makstreid}/supermock-backend:latest && docker push ${DOCKER_USERNAME:-makstreid}/supermock-backend:latest",
    "docker:run": "docker run -p ${PORT:-4000}:${PORT:-4000} --env-file .env supermock-backend:latest"
  },
  "dependencies": {
    "@socket.io/redis-adapter": "^8.3.0",
    "@telegram-auth/server": "^1.0.4",
    "bcryptjs": "^2.4.3",
    "cors": "^2.8.5",
    "dotenv": "^16.5.0",
    "express": "^4.18.2",
    "express-validator": "^7.2.1",
    "form-data": "^4.0.4",
    "googleapis": "^133.0.0",
    "jsonwebtoken": "^9.0.2",
    "mongodb": "^6.5.0",
    "mongoose": "^8.14.1",
    "node-fetch": "^2.7.0",
    "openai": "^5.15.0",
    "passport": "^0.7.0",
    "passport-google-oauth20": "^2.0.0",
    "redis": "^5.0.1",
    "socket.io": "^4.8.1",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@prisma/client": "^6.14.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.18",
    "@types/express": "^5.0.1",
    "@types/express-validator": "^3.0.2",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/mongodb": "^4.0.7",
    "@types/node": "^22.15.17",
    "@types/passport": "^1.0.17",
    "@types/passport-google-oauth20": "^2.0.16",
    "@types/redis": "^4.0.11",
    "@types/socket.io": "^3.0.1",
    "@types/uuid": "^10.0.0",
    "kill-port": "^2.0.1",
    "nodemon": "^3.1.10",
    "prisma": "^6.14.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  }
}
