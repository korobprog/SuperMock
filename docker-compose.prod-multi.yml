version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: supermock-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-supermock}
      POSTGRES_USER: ${POSTGRES_USER:-supermock}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-krishna1284}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - supermock-network
    restart: unless-stopped

  # Redis для кэширования и WebSocket
  redis:
    image: redis:7-alpine
    container_name: supermock-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - supermock-network
    restart: unless-stopped

  # Backend API сервер
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: supermock-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-supermock}:${POSTGRES_PASSWORD:-krishna1284}@supermock-postgres:5432/${POSTGRES_DB:-supermock}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - USE_REDIS=true
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET:-f0cf01026e91c1a40865ac15459e81fb}
      - SESSION_SECRET=${SESSION_SECRET:-c7bee247bc9a10ce3b15ebe08429fab0afc1cbb94b1eec72ea64257f5fe5e9d3}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_BOT_ID=${TELEGRAM_BOT_ID}
      - TELEGRAM_BOT_NAME=${TELEGRAM_BOT_NAME}
      - FRONTEND_URL=https://app.supermock.ru
      - BACKEND_URL=https://api.supermock.ru
      - VITE_API_URL=https://api.supermock.ru
      - CORS_ORIGIN=https://app.supermock.ru
    volumes:
      - ./backend:/app/backend
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - supermock-network
    restart: unless-stopped

  # Frontend приложение (app.supermock.ru)
  frontend-app:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      args:
        VITE_API_URL: https://api.supermock.ru
        VITE_TELEGRAM_BOT_NAME: ${TELEGRAM_BOT_NAME}
        VITE_TELEGRAM_BOT_ID: ${TELEGRAM_BOT_ID}
        VITE_JITSI_URL: ${VITE_JITSI_URL:-https://meet.jit.si}
        VITE_STUN_URLS: ${VITE_STUN_URLS:-stun:stun.l.google.com:19302}
        VITE_TURN_URL: ${VITE_TURN_URL}
        VITE_TURN_USERNAME: ${VITE_TURN_USERNAME}
        VITE_TURN_PASSWORD: ${VITE_TURN_PASSWORD}
    container_name: supermock-frontend-app
    environment:
      - NODE_ENV=production
      - VITE_API_URL=https://api.supermock.ru
      - VITE_TELEGRAM_BOT_NAME=${TELEGRAM_BOT_NAME}
      - VITE_TELEGRAM_BOT_ID=${TELEGRAM_BOT_ID}
      - VITE_JITSI_URL=${VITE_JITSI_URL:-https://meet.jit.si}
      - VITE_STUN_URLS=${VITE_STUN_URLS:-stun:stun.l.google.com:19302}
      - VITE_TURN_URL=${VITE_TURN_URL}
      - VITE_TURN_USERNAME=${VITE_TURN_USERNAME}
      - VITE_TURN_PASSWORD=${VITE_TURN_PASSWORD}
    volumes:
      - ./frontend:/app/frontend
      - /app/node_modules
    networks:
      - supermock-network
    restart: unless-stopped

  # Лендинг (supermock.ru)
  frontend-landing:
    build:
      context: .
      dockerfile: Lading/supermock-ai-interview/Dockerfile
    container_name: supermock-frontend-landing
    environment:
      - NODE_ENV=production
    volumes:
      - ./Lading/supermock-ai-interview:/app/Lading/supermock-ai-interview
      - /app/node_modules
    networks:
      - supermock-network
    restart: unless-stopped

  # Nginx для маршрутизации
  nginx:
    image: nginx:alpine
    container_name: supermock-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-multi.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - backend
      - frontend-app
      - frontend-landing
    networks:
      - supermock-network
    restart: unless-stopped

  # Traefik для автоматического SSL и маршрутизации
  traefik:
    image: traefik:v2.10
    container_name: supermock-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@supermock.ru"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/letsencrypt
    networks:
      - supermock-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  nginx_logs:
  traefik_certs:

networks:
  supermock-network:
    driver: bridge
