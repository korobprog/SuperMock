import FeedbackReminderService from './backend/server/feedback-reminders.js';
import InterviewAnalytics from './backend/server/analytics.js';

async function runAllAutomatedTasks() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á —Å–∏—Å—Ç–µ–º—ã –∏–Ω—Ç–µ—Ä–≤—å—é...\n');

  try {
    // 1. –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
    console.log('üìß –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...');
    const reminderService = new FeedbackReminderService();
    const reminderResults = await reminderService.runAllTasks();

    // 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    console.log('\nüìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...');
    const analytics = new InterviewAnalytics();
    const analyticsData = await analytics.getFullAnalytics();

    // 3. –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
    console.log('\nüìÅ –≠–∫—Å–ø–æ—Ä—Ç –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...');
    const exportFile = await analytics.exportAnalytics();

    // 4. –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    console.log('\nüéâ –í—Å–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç:');
    console.log('='.repeat(50));

    console.log('\nüìß –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:');
    console.log(
      `   - –°–æ–∑–¥–∞–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ —Ñ–∏–¥–±–µ–∫–µ: ${reminderResults.remindersCreated}`
    );
    console.log(
      `   - –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –≤—ã—Å–æ–∫–∏—Ö —Ä–µ–π—Ç–∏–Ω–≥–∞—Ö: ${reminderResults.highRatingNotifications}`
    );
    console.log(
      `   - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π: ${reminderResults.sessionsAutoCompleted}`
    );

    console.log('\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:');
    console.log(`   - –í—Å–µ–≥–æ —Å–µ—Å—Å–∏–π: ${analyticsData.overall.totalSessions}`);
    console.log(
      `   - –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π: ${analyticsData.overall.completedSessions}`
    );
    console.log(
      `   - –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: ${analyticsData.overall.completionRate}`
    );
    console.log(`   - –í—Å–µ–≥–æ —Ñ–∏–¥–±–µ–∫–æ–≤: ${analyticsData.overall.totalFeedbacks}`);
    console.log(`   - –ü—Ä–æ—Ü–µ–Ω—Ç —Ñ–∏–¥–±–µ–∫–æ–≤: ${analyticsData.overall.feedbackRate}`);
    console.log(`   - –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: ${analyticsData.overall.averageRating}`);
    console.log(
      `   - –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${analyticsData.overall.totalUsers}`
    );
    console.log(
      `   - –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${analyticsData.overall.activeUsers}`
    );

    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –Ω–µ–¥–µ–ª—é:');
    console.log(
      `   - –°–µ—Å—Å–∏–π –∑–∞ –Ω–µ–¥–µ–ª—é: ${analyticsData.weekly.sessionsInPeriod}`
    );
    console.log(
      `   - –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞ –Ω–µ–¥–µ–ª—é: ${analyticsData.weekly.completedInPeriod}`
    );
    console.log(
      `   - –§–∏–¥–±–µ–∫–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é: ${analyticsData.weekly.feedbacksInPeriod}`
    );
    console.log(
      `   - –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –∑–∞ –Ω–µ–¥–µ–ª—é: ${analyticsData.weekly.averageRating}`
    );

    console.log('\nüèÜ –¢–æ–ø –ø—Ä–æ—Ñ–µ—Å—Å–∏–π:');
    analyticsData.professions.slice(0, 5).forEach((prof, index) => {
      console.log(
        `   ${index + 1}. ${prof.profession}: ${
          prof.sessionsCount
        } —Å–µ—Å—Å–∏–π, —Ä–µ–π—Ç–∏–Ω–≥ ${prof.averageRating}`
      );
    });

    console.log('\nüåç –Ø–∑—ã–∫–∏:');
    analyticsData.languages.slice(0, 3).forEach((lang, index) => {
      console.log(
        `   ${index + 1}. ${lang.language}: ${lang.sessionsCount} —Å–µ—Å—Å–∏–π`
      );
    });

    console.log('\n‚≠ê –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤:');
    analyticsData.ratings.distribution.forEach((rating) => {
      console.log(
        `   ${rating.rating} –∑–≤–µ–∑–¥: ${rating.count} (${rating.percentage}%)`
      );
    });

    console.log('\n‚è∞ –í—Ä–µ–º—è –¥–æ —Ñ–∏–¥–±–µ–∫–∞:');
    console.log(
      `   - –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è: ${analyticsData.feedbackTiming.averageTimeToFeedback}`
    );
    console.log(
      `   - 0-24 —á–∞—Å–∞: ${analyticsData.feedbackTiming.timeRanges['0-24h']}`
    );
    console.log(
      `   - 24-72 —á–∞—Å–∞: ${analyticsData.feedbackTiming.timeRanges['24-72h']}`
    );
    console.log(
      `   - 72+ —á–∞—Å–æ–≤: ${analyticsData.feedbackTiming.timeRanges['72h+']}`
    );

    console.log('\nüìÅ –§–∞–π–ª—ã:');
    console.log(`   - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –≤: ${exportFile}`);

    console.log('\n' + '='.repeat(50));
    console.log('‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');

    return {
      success: true,
      reminderResults,
      analyticsData,
      exportFile,
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á:', error);
    return {
      success: false,
      error: error.message,
    };
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á–∏, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (import.meta.url.endsWith('run-automated-tasks.js')) {
  runAllAutomatedTasks()
    .then((result) => {
      if (result.success) {
        console.log('\nüéØ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!');
        process.exit(0);
      } else {
        console.error('\nüí• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:', result.error);
        process.exit(1);
      }
    })
    .catch((error) => {
      console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

export default runAllAutomatedTasks;
