version: '3.8'

services:
  traefik:
    image: traefik:v3.1
    container_name: supermock-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.letsencrypt.acme.email=admin@supermock.ru"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/letsencrypt
    networks:
      - supermock-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # Dashboard
      - "traefik.http.routers.dashboard.rule=Host(`traefik.supermock.ru`)"
      - "traefik.http.routers.dashboard.entrypoints=websecure"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"

  # Backend API (api.supermock.ru)
  backend:
    image: mockmate-backend
    container_name: supermock-backend
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://${POSTGRES_USER:-supermock}:${POSTGRES_PASSWORD:-krishna1284}@supermock-postgres:5432/${POSTGRES_DB:-supermock}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_BOT_ID=${TELEGRAM_BOT_ID}
      - TELEGRAM_BOT_NAME=${TELEGRAM_BOT_NAME}
      - FRONTEND_URL=https://app.supermock.ru
      - BACKEND_URL=https://api.supermock.ru
      - VITE_API_URL=https://api.supermock.ru
      - CORS_ORIGIN=https://app.supermock.ru
      - VITE_TELEGRAM_BOT_NAME=${VITE_TELEGRAM_BOT_NAME}
      - VITE_TELEGRAM_BOT_ID=${VITE_TELEGRAM_BOT_ID}
      - VITE_JITSI_URL=${VITE_JITSI_URL}
      - VITE_STUN_URLS=${VITE_STUN_URLS}
      - VITE_TURN_URL=${VITE_TURN_URL}
      - VITE_TURN_USERNAME=${VITE_TURN_USERNAME}
      - VITE_TURN_PASSWORD=${VITE_TURN_PASSWORD}
    volumes:
      - ./backend:/app/backend
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - supermock-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.supermock.ru`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"

  # Frontend App (app.supermock.ru)
  frontend-app:
    image: mockmate-frontend-app
    container_name: supermock-frontend-app
    environment:
      - NODE_ENV=production
      - VITE_API_URL=https://api.supermock.ru
      - VITE_TELEGRAM_BOT_NAME=${TELEGRAM_BOT_NAME}
      - VITE_TELEGRAM_BOT_ID=${TELEGRAM_BOT_ID}
      - VITE_JITSI_URL=${VITE_JITSI_URL:-https://meet.jit.si}
      - VITE_STUN_URLS=${VITE_STUN_URLS:-stun:stun.l.google.com:19302}
      - VITE_TURN_URL=${VITE_TURN_URL}
      - VITE_TURN_USERNAME=${VITE_TURN_USERNAME}
      - VITE_TURN_PASSWORD=${VITE_TURN_PASSWORD}
    volumes:
      - ./frontend:/app/frontend
      - /app/node_modules
    networks:
      - supermock-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-app.rule=Host(`app.supermock.ru`)"
      - "traefik.http.routers.frontend-app.entrypoints=websecure"
      - "traefik.http.routers.frontend-app.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend-app.loadbalancer.server.port=8080"

  # Landing Page (supermock.ru)
  frontend-landing:
    image: mockmate-frontend-landing
    container_name: supermock-frontend-landing
    environment:
      - NODE_ENV=production
    volumes:
      - ./Lading/supermock-ai-interview:/app/Lading/supermock-ai-interview
      - /app/node_modules
    networks:
      - supermock-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend-landing.rule=Host(`supermock.ru`) || Host(`www.supermock.ru`)"
      - "traefik.http.routers.frontend-landing.entrypoints=websecure"
      - "traefik.http.routers.frontend-landing.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend-landing.loadbalancer.server.port=80"

  # PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: supermock-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-supermock}
      - POSTGRES_USER=${POSTGRES_USER:-supermock}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-krishna1284}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - supermock-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: supermock-redis
    volumes:
      - redis_data:/data
    networks:
      - supermock-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  traefik_certs:

networks:
  supermock-network:
    driver: bridge
